{"version":3,"file":"flowrunner-redux.esm.js","sources":["../src/ReduxActionTask.ts","../src/ReduxArrayStateType.ts","../src/ReduxAssignArrayActionTask.ts","../src/ReduxSetItemByKeyArrayActionTask.ts","../src/ReduxPropertyStateType.ts","../src/ReduxClearArrayActionTask.ts","../src/ReduxGetKeyTask.ts","../src/ReduxGetTask.ts","../src/ReduxHashmapStateType.ts","../src/ReduxPushArrayActionTask.ts","../src/ReduxSetKeyActionTask.ts","../src/ReduxThunkActionTask.ts","../src/StoreObserverTask.ts","../src/FrontendFlowEventRunner.ts","../src/components/ReactComponentFlowConnector.tsx","../src/components/ReactComponentTriggerFlow.tsx"],"sourcesContent":["import { FlowTask, FlowTaskPackageType } from '@devhelpr/flowrunner';\n\nexport class ReduxActionTask extends FlowTask {\n  public execute(node: any, services: any) {\n    services.dispatch({\n      type: node.setVariable.replace(/ /g, '') + 'SetAction',\n      value: node.payload.value,\n    });\n\n    return true;\n  }\n\n  public getName() {\n    return 'ReduxActionTask';\n  }\n\n  public getFullName() {\n    return 'ReduxAction';\n  }\n\n  public getDescription() {\n    return 'Node that performs a simple redux action';\n  }\n\n  public getIcon() {\n    return 'reduxaction';\n  }\n\n  public getShape() {\n    return 'circle';\n  }\n\n  public getTaskType() {\n    return 'frontend';\n  }\n\n  public getPackageType() {\n    return FlowTaskPackageType.DEFAULT_NODE;\n  }\n\n  public getCategory() {\n    return 'FlowCanvas';\n  }\n\n  public getController() {\n    return 'FlowCanvasController';\n  }\n\n  public getConfigMetaData() {\n    return [\n      {\n        name: 'setVariable',\n        defaultValue: '',\n        valueType: 'string',\n        required: true,\n      },\n    ];\n  }\n}\n","import * as FlowRunner from '@devhelpr/flowrunner';\n\nexport class ReduxArrayStateType extends FlowRunner.FlowTask {\n  public execute(node: any, _services: any) {\n    console.log('RUNNING ReduxArrayStateType: ' + node.id + ' - ' + node.name);\n\n    return true;\n  }\n\n  public getName() {\n    return 'ReduxArrayStateType';\n  }\n\n  public getFullName() {\n    return 'ReduxArray';\n  }\n\n  public getReducer(node: any) {\n    const variableName = node.variableName.replace(/ /g, '');\n\n    const pushActionId = variableName + 'PushArrayAction';\n    const clearActionId = variableName + 'ClearArrayAction';\n    const assignActionId = variableName + 'AssignArrayAction';\n    const setItemByKeyActionId = variableName + 'SetItemByKeyAction';\n\n    return (state = [], action: any) => {\n      switch (action.type) {\n        case clearActionId: {\n          return [];\n        }\n        case assignActionId: {\n          return action.list;\n        }\n        case pushActionId: {\n          const newState: any = state.slice();\n          newState.push(action.value);\n          return newState;\n        }\n        case setItemByKeyActionId: {\n          let newState = state.map((item: any) => {\n            if (\n              item[node.idPropertyName] === action.payload[node.idPropertyName]\n            ) {\n              return { ...action.payload };\n            }\n            return { ...item };\n          });\n          return newState;\n        }\n        default:\n          return state;\n      }\n    };\n  }\n\n  public getIcon() {\n    return 'reduxarray';\n  }\n\n  public getShape() {\n    return 'rect';\n  }\n\n  public getTaskType() {\n    return 'frontend';\n  }\n\n  public getPackageType() {\n    return FlowRunner.FlowTaskPackageType.DEFAULT_NODE;\n  }\n\n  public getCategory() {\n    return 'FlowCanvas';\n  }\n\n  public getController() {\n    return 'FlowCanvasController';\n  }\n\n  public getConfigMetaData() {\n    return [\n      {\n        name: 'variableName',\n        defaultValue: '',\n        valueType: 'string',\n        required: true,\n      },\n    ];\n  }\n}\n","import { FlowTask, FlowTaskPackageType } from '@devhelpr/flowrunner';\n\nexport class ReduxAssignArrayActionTask extends FlowTask {\n  public execute(node: any, services: any) {\n    services.dispatch({\n      type: node.setVariable.replace(/ /g, '') + 'AssignArrayAction',\n      list: node.payload.list,\n    });\n\n    return true;\n  }\n\n  public getName() {\n    return 'ReduxAssignArrayActionTask';\n  }\n\n  public getFullName() {\n    return 'ReduxAssignArrayAction';\n  }\n\n  public getIcon() {\n    return 'reduxassignarrayaction';\n  }\n\n  public getShape() {\n    return 'circle';\n  }\n\n  public getTaskType() {\n    return 'frontend';\n  }\n\n  public getPackageType() {\n    return FlowTaskPackageType.DEFAULT_NODE;\n  }\n\n  public getCategory() {\n    return 'FlowCanvas';\n  }\n\n  public getController() {\n    return 'FlowCanvasController';\n  }\n\n  public getConfigMetaData() {\n    return [\n      {\n        name: 'setVariable',\n        defaultValue: '',\n        valueType: 'string',\n        required: true,\n      },\n    ];\n  }\n}\n","import { FlowTask, FlowTaskPackageType } from '@devhelpr/flowrunner';\n\nexport class ReduxSetItemByKeyArrayActionTask extends FlowTask {\n  public execute(node: any, services: any) {\n    services.dispatch({\n      type: node.setVariable.replace(/ /g, '') + 'SetItemByKeyAction',\n      payload: node.payload,\n    });\n\n    return true;\n  }\n\n  public getName() {\n    return 'ReduxSetItemByKeyArrayActionTask';\n  }\n\n  public getFullName() {\n    return 'ReduxSetItemByKeyArrayAction';\n  }\n\n  public getIcon() {\n    return 'reduxsetitembykeyarrayaction';\n  }\n\n  public getShape() {\n    return 'circle';\n  }\n\n  public getTaskType() {\n    return 'frontend';\n  }\n\n  public getPackageType() {\n    return FlowTaskPackageType.DEFAULT_NODE;\n  }\n\n  public getCategory() {\n    return 'FlowCanvas';\n  }\n\n  public getController() {\n    return 'FlowCanvasController';\n  }\n\n  public getConfigMetaData() {\n    return [\n      {\n        name: 'setVariable',\n        defaultValue: '',\n        valueType: 'string',\n        required: true,\n      },\n    ];\n  }\n}\n","import { FlowTask, FlowTaskPackageType } from '@devhelpr/flowrunner';\n\n//const REDUX_ASSIGN_SET_VALUE_ACTION = 'REDUX_ASSIGN_SET_VALUE_ACTION';\n\nexport class ReduxPropertyStateType extends FlowTask {\n  public execute(node: any, _services: any, _callStack: any) {\n    console.log(\n      'RUNNING ReduxPropertyStateType: ' + node.id + ' - ' + node.name\n    );\n\n    return true;\n  }\n\n  public getName() {\n    return 'ReduxPropertyStateType';\n  }\n\n  public getFullName() {\n    return 'ReduxProperty';\n  }\n\n  public getReducer(node: any) {\n    const actionId = node.variableName.replace(/ /g, '') + 'SetAction';\n    return (state = '', action: any) => {\n      try {\n        switch (action.type) {\n          case actionId:\n            if (action.value !== undefined) {\n              return action.value;\n            } else {\n              return state;\n            }\n          default:\n            return state;\n        }\n      } catch (err) {\n        return state;\n      }\n    };\n  }\n\n  public getIcon() {\n    return 'reduxproperty';\n  }\n\n  public getShape() {\n    return 'rect';\n  }\n\n  public getTaskType() {\n    return 'frontend';\n  }\n\n  public getPackageType() {\n    return FlowTaskPackageType.DEFAULT_NODE;\n  }\n\n  public getCategory() {\n    return 'FlowCanvas';\n  }\n\n  public getController() {\n    return 'FlowCanvasController';\n  }\n\n  public getConfigMetaData() {\n    return [\n      { name: 'value', defaultValue: '', valueType: 'string', required: false },\n      {\n        name: 'variableName',\n        defaultValue: '',\n        valueType: 'string',\n        required: false,\n      },\n    ];\n  }\n}\n","import { FlowTask, FlowTaskPackageType } from '@devhelpr/flowrunner';\n\nexport class ReduxClearArrayActionTask extends FlowTask {\n  public execute(node: any, services: any) {\n    services.dispatch({\n      type: node.setVariable.replace(/ /g, '') + 'ClearArrayAction',\n      value: node.payload.value,\n    });\n\n    return true;\n  }\n\n  public getName() {\n    return 'ReduxClearArrayActionTask';\n  }\n\n  public getFullName() {\n    return 'ReduxClearArrayActionTask';\n  }\n\n  public getIcon() {\n    return 'reduxcleararrayaction';\n  }\n\n  public getShape() {\n    return 'circle';\n  }\n\n  public getTaskType() {\n    return 'frontend';\n  }\n\n  public getPackageType() {\n    return FlowTaskPackageType.DEFAULT_NODE;\n  }\n\n  public getCategory() {\n    return 'FlowCanvas';\n  }\n\n  public getController() {\n    return 'FlowCanvasController';\n  }\n\n  public getConfigMetaData() {\n    return [\n      {\n        name: 'setVariable',\n        defaultValue: '',\n        valueType: 'string',\n        required: true,\n      },\n    ];\n  }\n}\n","import { FlowTask, FlowTaskPackageType } from '@devhelpr/flowrunner';\n\nexport class ReduxGetKeyTask extends FlowTask {\n  public execute(node: any, services: any, _callStack: any): any {\n    return new Promise((resolve, reject) => {\n      if (\n        node.assignTo !== undefined &&\n        node.readKey !== undefined &&\n        node.assignTo !== '' &&\n        node.readKey !== ''\n      ) {\n        const reducerName = node.getVariable.replace(/ /g, '');\n        const store = services.getStore().getState();\n\n        const payload = Object.assign({}, node.payload, {\n          [node.assignTo]: store[reducerName][node.readKey],\n        });\n        resolve(payload);\n      } else {\n        reject();\n      }\n    });\n  }\n\n  public getName() {\n    return 'ReduxGetKeyTask';\n  }\n\n  public getFullName() {\n    return 'ReduxGetKey';\n  }\n\n  public getDescription() {\n    return 'Reducer name: {{{title}}} - get property: {{{readKey}}} set property {{{assignTo}}} in payload';\n  }\n\n  public getIcon() {\n    return 'reactgetkey';\n  }\n\n  public getShape() {\n    return 'circle';\n  }\n\n  public getTaskType() {\n    return 'frontend';\n  }\n\n  public getPackageType() {\n    return FlowTaskPackageType.DEFAULT_NODE;\n  }\n\n  public getCategory() {\n    return 'FlowCanvas';\n  }\n\n  public getController() {\n    return 'FlowCanvasController';\n  }\n\n  public getConfigMetaData() {\n    return [\n      {\n        name: 'readKey',\n        defaultValue: '',\n        valueType: 'string',\n        required: true,\n      },\n      {\n        name: 'assignTo',\n        defaultValue: '',\n        valueType: 'string',\n        required: true,\n      },\n      {\n        name: 'getVariable',\n        defaultValue: '',\n        valueType: 'string',\n        required: true,\n      },\n    ];\n  }\n}\n","import { FlowTask, FlowTaskPackageType } from '@devhelpr/flowrunner';\n\nexport class ReduxGetTask extends FlowTask {\n  public execute(node: any, services: any, _callStack: any) {\n    return new Promise((resolve, reject) => {\n      if (node.assignTo !== undefined && node.assignTo !== '') {\n        const reducerName = node.getVariable.replace(/ /g, '');\n\n        const store = services.getStore().getState();\n\n        const payload = Object.assign({}, node.payload, {\n          [node.assignTo]: store[reducerName],\n        });\n        resolve(payload);\n      } else {\n        reject();\n      }\n    });\n  }\n\n  public getName() {\n    return 'ReduxGetTask';\n  }\n\n  public getFullName() {\n    return 'ReduxGet';\n  }\n\n  public getDescription() {\n    return 'Get from store: Reducer name: {{{title}}} - and set property {{{assignTo}}} in payload';\n  }\n\n  public getIcon() {\n    return 'reactget';\n  }\n\n  public getShape() {\n    return 'rect';\n  }\n\n  public getTaskType() {\n    return 'frontend';\n  }\n\n  public getPackageType() {\n    return FlowTaskPackageType.DEFAULT_NODE;\n  }\n\n  public getCategory() {\n    return 'FlowCanvas';\n  }\n\n  public getController() {\n    return 'FlowCanvasController';\n  }\n\n  public getConfigMetaData() {\n    return [\n      {\n        name: 'assignTo',\n        defaultValue: '',\n        valueType: 'string',\n        required: true,\n      },\n      {\n        name: 'getVariable',\n        defaultValue: '',\n        valueType: 'string',\n        required: true,\n      },\n    ];\n  }\n}\n","import { FlowTask, FlowTaskPackageType } from '@devhelpr/flowrunner';\n\nexport class ReduxHashmapStateType extends FlowTask {\n  public execute(node: any, _services: any) {\n    console.log(\n      'RUNNING ReduxHashmapStateType: ' + node.id + ' - ' + node.name\n    );\n\n    return true;\n  }\n\n  public getName() {\n    return 'ReduxHashmapStateType';\n  }\n\n  public getFullName() {\n    return 'ReduxHashmap';\n  }\n\n  public getReducer(node: any) {\n    const setKeyActionId = node.variableName.replace(/ /g, '') + 'SetKeyAction';\n    return (state = {}, action: any) => {\n      switch (action.type) {\n        case setKeyActionId:\n          return Object.assign({}, state, { [action.key]: action.value });\n        default:\n          return state;\n      }\n    };\n  }\n\n  public getIcon() {\n    return 'reduxhashmap';\n  }\n\n  public getShape() {\n    return 'rect';\n  }\n\n  public getTaskType() {\n    return 'frontend';\n  }\n\n  public getPackageType() {\n    return FlowTaskPackageType.DEFAULT_NODE;\n  }\n\n  public getCategory() {\n    return 'FlowCanvas';\n  }\n\n  public getController() {\n    return 'FlowCanvasController';\n  }\n\n  public getConfigMetaData() {\n    return [\n      {\n        name: 'variableName',\n        defaultValue: '',\n        valueType: 'string',\n        required: true,\n      },\n    ];\n  }\n}\n","import { FlowTask, FlowTaskPackageType } from '@devhelpr/flowrunner';\n\nexport class ReduxPushArrayActionTask extends FlowTask {\n  public execute(node: any, services: any) {\n    services.dispatch({\n      type: node.setVariable.replace(/ /g, '') + 'PushArrayAction',\n      value: node.payload.value,\n    });\n\n    return true;\n  }\n\n  public getName() {\n    return 'ReduxPushArrayActionTask';\n  }\n\n  public getFullName() {\n    return 'ReduxPushArrayAction';\n  }\n\n  public getIcon() {\n    return 'reduxpusharrayaction';\n  }\n\n  public getShape() {\n    return 'circle';\n  }\n\n  public getTaskType() {\n    return 'frontend';\n  }\n\n  public getPackageType() {\n    return FlowTaskPackageType.DEFAULT_NODE;\n  }\n\n  public getCategory() {\n    return 'FlowCanvas';\n  }\n\n  public getController() {\n    return 'FlowCanvasController';\n  }\n\n  public getConfigMetaData() {\n    return [\n      {\n        name: 'setVariable',\n        defaultValue: '',\n        valueType: 'string',\n        required: true,\n      },\n    ];\n  }\n}\n","import { FlowTask, FlowTaskPackageType } from '@devhelpr/flowrunner';\n\nexport class ReduxSetKeyActionTask extends FlowTask {\n  public execute(node: any, services: any) {\n    services.callStack.dispatch({\n      key: node.assignToKey,\n      type: node.setVariable.replace(/ /g, '') + 'SetKeyAction',\n      value: node.payload.value,\n    });\n\n    return true;\n  }\n\n  public getDescription() {\n    return \"Reducer name: {{{title}}} - set property: {{{assignToKey}}} using property 'value' from payload\";\n  }\n\n  public getName() {\n    return 'ReduxSetKeyActionTask';\n  }\n\n  public getFullName() {\n    return 'ReduxSetKeyAction';\n  }\n\n  public getIcon() {\n    return 'reduxsetkeyaction';\n  }\n\n  public getShape() {\n    return 'circle';\n  }\n\n  public getTaskType() {\n    return 'frontend';\n  }\n\n  public getPackageType() {\n    return FlowTaskPackageType.DEFAULT_NODE;\n  }\n\n  public getCategory() {\n    return 'FlowCanvas';\n  }\n\n  public getController() {\n    return 'FlowCanvasController';\n  }\n\n  public getConfigMetaData() {\n    return [\n      {\n        name: 'assignToKey',\n        defaultValue: '',\n        valueType: 'string',\n        required: true,\n      },\n      {\n        name: 'setVariable',\n        defaultValue: '',\n        valueType: 'string',\n        required: true,\n      },\n    ];\n  }\n}\n","import { FlowTask, FlowTaskPackageType } from '@devhelpr/flowrunner';\n\nexport class ReduxThunkActionTask extends FlowTask {\n  public execute(node: any) {\n    console.log('RUNNING ReduxThunkActionTask: ' + node.id + ' - ' + node.name);\n\n    return true;\n  }\n\n  public getName() {\n    return 'ReduxThunkActionTask';\n  }\n\n  public getFullName() {\n    return 'ReduxThunkAction';\n  }\n\n  public getIcon() {\n    return 'reduxthunkaction';\n  }\n\n  public getShape() {\n    return 'circle';\n  }\n\n  public getTaskType() {\n    return 'frontend';\n  }\n\n  public getPackageType() {\n    return FlowTaskPackageType.DEFAULT_NODE;\n  }\n\n  public getCategory() {\n    return 'FlowCanvas';\n  }\n\n  public getController() {\n    return 'FlowCanvasController';\n  }\n\n  public getAction(_actionName: string, _nodeInstance: any, nodeEmitter: any) {\n    return (nodeEvent: any, payload: any) => {\n      return (dispatch: any) => {\n        //console.log('reactthunkaction dispatched...ready to trigger events', nodeEvent);\n        nodeEvent.outputs.map((node: any) => {\n          nodeEmitter.emit(node.endshapeid.toString(), payload, dispatch);\n          return true;\n        });\n      };\n    };\n  }\n}\n","import { FlowTask, FlowTaskPackageType } from '@devhelpr/flowrunner';\nimport { Observable } from 'rxjs';\n\nvar isEqual = function(value: any, other: any) {\n  // Get the value type\n  var type = Object.prototype.toString.call(value);\n\n  // If the two objects are not the same type, return false\n  if (type !== Object.prototype.toString.call(other)) return false;\n\n  // If items are not an object or array, return false\n  if (['[object Array]', '[object Object]'].indexOf(type) < 0) return false;\n\n  // Compare the length of the length of the two items\n  var valueLen =\n    type === '[object Array]' ? value.length : Object.keys(value).length;\n  var otherLen =\n    type === '[object Array]' ? other.length : Object.keys(other).length;\n  if (valueLen !== otherLen) return false;\n\n  // Compare two items\n  var compare = function(item1: any, item2: any) {\n    // Get the object type\n    var itemType = Object.prototype.toString.call(item1);\n\n    // If an object or array, compare recursively\n    if (['[object Array]', '[object Object]'].indexOf(itemType) >= 0) {\n      if (!isEqual(item1, item2)) return false;\n    }\n\n    // Otherwise, do a simple comparison\n    else {\n      // If the two items are not the same type, return false\n      if (itemType !== Object.prototype.toString.call(item2)) return false;\n\n      // Else if it's a function, convert to a string and compare\n      // Otherwise, just compare\n      if (itemType === '[object Function]') {\n        if (item1.toString() !== item2.toString()) return false;\n      } else {\n        if (item1 !== item2) return false;\n      }\n    }\n    return true;\n  };\n\n  // Compare properties\n  if (type === '[object Array]') {\n    for (var i = 0; i < valueLen; i++) {\n      if (compare(value[i], other[i]) === false) return false;\n    }\n  } else {\n    for (var key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (compare(value[key], other[key]) === false) return false;\n      }\n    }\n  }\n\n  // If nothing failed, return true\n  return true;\n};\n\nexport class StoreObserverTask extends FlowTask {\n  public execute(node: any, services: any) {\n    const observable = Observable.create((observer: any) => {\n      try {\n        if (node.propertyName !== undefined && node.propertyName !== '') {\n          const observableSubscription = services.getObservable('storechange');\n\n          if (\n            observableSubscription !== undefined &&\n            observableSubscription !== false\n          ) {\n            const observerSubscription = {\n              complete: () => {\n                console.log(\n                  'StoreObserverTask: Completed observable for ',\n                  node.name\n                );\n              },\n              error: (err: any) => {\n                observer.error(err);\n              },\n              next: (payload: any) => {\n                // payload:\n                // - nextState\n                // - prevState\n                if (\n                  node.propertyName !== undefined &&\n                  node.propertyName !== null &&\n                  node.propertyName !== ''\n                ) {\n                  if (\n                    !isEqual(\n                      payload.nextState[node.propertyName],\n                      payload.prevState[node.propertyName]\n                    )\n                  ) {\n                    observer.next(payload.nextState);\n                  }\n                }\n              },\n            };\n\n            observableSubscription.subscribe(observerSubscription);\n          } else {\n            observer.error(\n              'StoreObserverTask: Error - observable not found',\n              node.observe\n            );\n          }\n        } else {\n          observer.error('StoreObserverTask: Error - nothing to observe');\n        }\n      } catch (err) {\n        observer.error(err);\n      }\n    });\n\n    return observable;\n  }\n\n  public isAttachedToExternalObservable() {\n    return true;\n  }\n  public isAttachedToStoreChanges() {\n    return true;\n  }\n\n  public getDescription() {\n    return 'Node that observes store changes for {{{propertyName}}}';\n  }\n\n  public getName() {\n    return 'StoreObserverTask';\n  }\n\n  public getFullName() {\n    return 'StoreObserver';\n  }\n\n  public getIcon() {\n    return 'storeobserver';\n  }\n\n  public getShape() {\n    return 'smallcircle';\n  }\n\n  public getDefaultColor() {\n    return '#00ff80ff';\n  }\n\n  public getTaskType() {\n    return 'both';\n  }\n\n  public getPackageType() {\n    return FlowTaskPackageType.DEFAULT_NODE;\n  }\n\n  public getCategory() {\n    return 'FlowCanvas';\n  }\n\n  public getController() {\n    return 'FlowCanvasController';\n  }\n\n  public getConfigMetaData() {\n    return [\n      {\n        name: 'propertyName',\n        defaultValue: '',\n        valueType: 'string',\n        required: true,\n      },\n    ];\n  }\n}\n","import * as Redux from 'redux';\nimport { Subject } from 'rxjs';\nimport thunk from 'redux-thunk';\n\nimport { FlowEventRunner } from '@devhelpr/flowrunner';\nimport { ReduxActionTask } from './ReduxActionTask';\nimport { ReduxArrayStateType } from './ReduxArrayStateType';\nimport { ReduxAssignArrayActionTask } from './ReduxAssignArrayActionTask';\nimport { ReduxSetItemByKeyArrayActionTask } from './ReduxSetItemByKeyArrayActionTask';\nimport { ReduxPropertyStateType } from './ReduxPropertyStateType';\nimport { ReduxClearArrayActionTask } from './ReduxClearArrayActionTask';\nimport { ReduxGetKeyTask } from './ReduxGetKeyTask';\nimport { ReduxGetTask } from './ReduxGetTask';\nimport { ReduxHashmapStateType } from './ReduxHashmapStateType';\nimport { ReduxPushArrayActionTask } from './ReduxPushArrayActionTask';\nimport { ReduxSetKeyActionTask } from './ReduxSetKeyActionTask';\nimport { ReduxThunkActionTask } from './ReduxThunkActionTask';\nimport { StoreObserverTask } from './StoreObserverTask';\n\nlet actions: any = {};\nlet reducers: any = {};\nlet store: any = {};\nlet services: any = {};\nlet observers: any = {};\n\nexport interface IFrontendFlowRunner {\n  debug: boolean;\n  reduxMiddleware: any;\n  initialStoreState: any;\n}\n\nservices = {\n  logMessage: () => {},\n  pluginClasses: {},\n  registerModel: () => {},\n};\n\nservices.pluginClasses['ReduxActionTask'] = ReduxActionTask;\nservices.pluginClasses['ReduxArrayStateType'] = ReduxArrayStateType;\nservices.pluginClasses[\n  'ReduxAssignArrayActionTask'\n] = ReduxAssignArrayActionTask;\nservices.pluginClasses[\n  'ReduxSetItemByKeyArrayActionTask'\n] = ReduxSetItemByKeyArrayActionTask;\nservices.pluginClasses['ReduxPropertyStateType'] = ReduxPropertyStateType;\nservices.pluginClasses['ReduxClearArrayActionTask'] = ReduxClearArrayActionTask;\nservices.pluginClasses['ReduxGetKeyTask'] = ReduxGetKeyTask;\nservices.pluginClasses['ReduxGetTask'] = ReduxGetTask;\nservices.pluginClasses['ReduxHashmapStateType'] = ReduxHashmapStateType;\nservices.pluginClasses['ReduxPushArrayActionTask'] = ReduxPushArrayActionTask;\nservices.pluginClasses['ReduxSetKeyActionTask'] = ReduxSetKeyActionTask;\nservices.pluginClasses['ReduxThunkActionTask'] = ReduxThunkActionTask;\nservices.pluginClasses['StoreObserverTask'] = StoreObserverTask;\n\n// TODO : replace \"hook : any\" met interface\n\nlet flowEventRunner = new FlowEventRunner();\n\nflowEventRunner.registerFlowNodeOverrideAttachHook(\n  (node: any, task: any, eventEmitter: any, nodeEvent: any) => {\n    if (typeof task.getAction === 'function') {\n      //let nodeInstance = (<any>Object).assign({}, node);\n      const actionName = node.name.replace(/ /g, '');\n      actions[actionName] = {\n        action: task.getAction(actionName, node, eventEmitter),\n        nodeEvent: nodeEvent,\n      };\n    }\n  }\n);\n\nflowEventRunner.registerFlowNodeRegisterHook((node: any, task: any) => {\n  if (typeof task.getReducer === 'function') {\n    reducers[node.variableName.replace(/ /g, '')] = task.getReducer(node);\n    return true;\n  }\n  return false;\n});\n\nlet subjectStoreChange = new Subject();\nlet flowNotifierFactory = (_name: string) => {\n  return function(middlewareAPI: any) {\n    return function(next: any) {\n      return function(action: any) {\n        let prevState = middlewareAPI.getState();\n\n        var result = next(action);\n\n        let nextState = middlewareAPI.getState();\n\n        subjectStoreChange.next({ nextState: nextState, prevState: prevState });\n        return result;\n      };\n    };\n  };\n};\nobservers['storechange'] = subjectStoreChange;\n\nservices.getStore = () => {\n  return store;\n};\n\nfunction flowAction(actionName: string, payload: any) {\n  const action = actions[actionName.replace(/ /g, '')];\n\n  if (typeof action != 'undefined' && action != null) {\n    services.getStore().dispatch(action.action(action.nodeEvent, payload));\n  }\n}\n\nlet startFlow: any = (\n  flowPackage: any,\n  appReducers: any,\n  options: IFrontendFlowRunner\n) => {\n  if (options) {\n    if (options.debug) {\n      services.logMessage = (...args: any[]) => console.log(...args);\n    }\n  }\n  return flowEventRunner\n    .start(flowPackage, services, true)\n    .then((services: any) => {\n      const rootReducer = Redux.combineReducers(\n        Object.assign({}, reducers, appReducers)\n      );\n\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        typeof window !== 'undefined' &&\n        (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ !== undefined\n      ) {\n        const composeEnhancers =\n          (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || Redux.compose;\n        let enhancer;\n        if (options.reduxMiddleware) {\n          enhancer = composeEnhancers(\n            Redux.applyMiddleware(\n              thunk,\n              flowNotifierFactory('flownotifier'),\n              options.reduxMiddleware\n            )\n          );\n        } else {\n          enhancer = composeEnhancers(\n            Redux.applyMiddleware(thunk, flowNotifierFactory('flownotifier'))\n          );\n        }\n\n        store = Redux.createStore(\n          rootReducer,\n          options.initialStoreState,\n          enhancer\n        );\n      } else {\n        if (options.reduxMiddleware) {\n          store = Redux.createStore(\n            rootReducer,\n            options.initialStoreState,\n            Redux.applyMiddleware(\n              thunk,\n              flowNotifierFactory('flownotifier'),\n              options.reduxMiddleware\n            )\n          );\n        } else {\n          store = Redux.createStore(\n            rootReducer,\n            options.initialStoreState,\n            Redux.applyMiddleware(thunk, flowNotifierFactory('flownotifier'))\n          );\n        }\n      }\n\n      // TODO : dispatch gaat verhuizen van callStack naar services\n      //  ... het is immers ook een externe dependency\n      // .. dus aanpassen in de diverse tasks\n\n      services.dispatch = store.dispatch;\n\n      return services;\n    });\n};\n\nconst getFlowEventRunner: any = () => flowEventRunner;\n\nexport { startFlow, flowAction, getFlowEventRunner };\n","import * as React from 'react';\nimport { getFlowEventRunner } from '../FrontendFlowEventRunner';\nimport { Subtract } from 'utility-types';\n\nexport interface ReactComponentFlowConnectorProp {\n  payload: any;\n}\n\nexport interface ReactComponentFlowConnectorProps\n  extends ReactComponentFlowConnectorProp {\n  nodeName: string;\n}\n\nexport interface ReactComponentFlowConnectorState {\n  showWrappedComponent: boolean;\n  payload: any;\n  renderCounter: number;\n}\n\nexport const ReactComponentFlowConnector = <\n  P extends ReactComponentFlowConnectorProps\n>(\n  Component: React.ComponentType<P>\n) => {\n  return class extends React.Component<\n    Subtract<P, ReactComponentFlowConnectorProp>,\n    ReactComponentFlowConnectorState\n  > {\n    //constructor(props: any) {\n    //  super(props);\n    //}\n\n    state = {\n      showWrappedComponent: false,\n      payload: {},\n      renderCounter: 1,\n    };\n\n    renderCounter = 1;\n\n    componentDidMount() {\n      const observable = getFlowEventRunner().getObservableNode(\n        this.props.nodeName\n      );\n      if (observable) {\n        observable.subscribe({\n          next: (payload: any) => {\n            this.setState({\n              showWrappedComponent:\n                payload.showComponent !== undefined\n                  ? payload.showComponent\n                  : true,\n              payload: payload,\n              renderCounter: this.state.renderCounter + 1,\n            });\n          },\n        });\n      }\n    }\n\n    render() {\n      // TODO : hoe hier zorgen dat Component echt een nieuwe instantie is\n      //   bij wisselen van layout/form ? (payload veranderd dan)\n      //  ... is render prop hier een oplossing voor ? wellicht alleen intern\n      //   {getComponent()}\n      //   getComponent => () => {\n      //\t\treturn ...\n      //   };\n      const getComponent = () => {\n        return (\n          <Component {...(this.props as P)} payload={this.state.payload} />\n        );\n      };\n      if (\n        this.state.showWrappedComponent &&\n        this.renderCounter < this.state.renderCounter\n      ) {\n        this.renderCounter = this.state.renderCounter;\n        return <>{getComponent()}</>;\n      }\n      return <></>;\n    }\n  };\n};\n","import * as React from 'react';\nimport { getFlowEventRunner } from '../FrontendFlowEventRunner';\nimport { Subtract } from 'utility-types';\n\nexport interface ReactComponentTriggerFlowProp {\n  onTriggerFlow: (payload: any) => void;\n}\n\nexport interface ReactComponentTriggerFlowProps\n  extends ReactComponentTriggerFlowProp {\n  nodeName: string;\n  triggerProperty: string;\n}\n\nexport interface ReactComponentTriggerFlowState {}\n\nexport const ReactComponentTriggerFlow = <\n  P extends ReactComponentTriggerFlowProps\n>(\n  Component: React.ComponentType<P>\n) => {\n  return class extends React.Component<\n    Subtract<P, ReactComponentTriggerFlowProp>,\n    ReactComponentTriggerFlowState\n  > {\n    //constructor(props: any) {\n    //  super(props);\n    //}\n\n    state = {};\n\n    onTriggerFlow = (payload: any) => {\n      getFlowEventRunner().executeNode(this.props.nodeName, {\n        ...payload,\n        [this.props.triggerProperty]: true,\n      });\n    };\n\n    render() {\n      return (\n        <Component\n          {...(this.props as P)}\n          triggerProperty={this.props.triggerProperty}\n          nodeName={this.props.nodeName}\n          onTriggerFlow={this.onTriggerFlow}\n        />\n      );\n    }\n  };\n};\n"],"names":["ReduxActionTask","execute","node","services","dispatch","type","setVariable","replace","value","payload","getName","getFullName","getDescription","getIcon","getShape","getTaskType","getPackageType","FlowTaskPackageType","DEFAULT_NODE","getCategory","getController","getConfigMetaData","name","defaultValue","valueType","required","FlowTask","ReduxArrayStateType","_services","console","log","id","getReducer","variableName","pushActionId","clearActionId","assignActionId","setItemByKeyActionId","state","action","list","newState","slice","push","map","item","idPropertyName","FlowRunner","ReduxAssignArrayActionTask","ReduxSetItemByKeyArrayActionTask","ReduxPropertyStateType","_callStack","actionId","undefined","err","ReduxClearArrayActionTask","ReduxGetKeyTask","Promise","resolve","reject","assignTo","readKey","reducerName","getVariable","store","getStore","getState","Object","assign","ReduxGetTask","ReduxHashmapStateType","setKeyActionId","key","ReduxPushArrayActionTask","ReduxSetKeyActionTask","callStack","assignToKey","ReduxThunkActionTask","getAction","_actionName","_nodeInstance","nodeEmitter","nodeEvent","outputs","emit","endshapeid","toString","isEqual","other","prototype","call","indexOf","valueLen","length","keys","otherLen","compare","item1","item2","itemType","i","hasOwnProperty","StoreObserverTask","observable","Observable","create","observer","propertyName","observableSubscription","getObservable","observerSubscription","complete","error","next","nextState","prevState","subscribe","observe","isAttachedToExternalObservable","isAttachedToStoreChanges","getDefaultColor","actions","reducers","logMessage","pluginClasses","registerModel","flowEventRunner","FlowEventRunner","registerFlowNodeOverrideAttachHook","task","eventEmitter","actionName","registerFlowNodeRegisterHook","subjectStoreChange","Subject","flowNotifierFactory","_name","middlewareAPI","result","flowAction","startFlow","flowPackage","appReducers","options","debug","start","then","rootReducer","Redux","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composeEnhancers","enhancer","reduxMiddleware","thunk","initialStoreState","getFlowEventRunner","ReactComponentFlowConnector","Component","showWrappedComponent","renderCounter","componentDidMount","getObservableNode","props","nodeName","setState","showComponent","render","getComponent","React","ReactComponentTriggerFlow","executeNode","triggerProperty","onTriggerFlow"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEaA,eAAb;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,SACSC,OADT,GACS,iBAAQC,IAAR,EAAmBC,QAAnB;AACLA,IAAAA,QAAQ,CAACC,QAAT,CAAkB;AAChBC,MAAAA,IAAI,EAAEH,IAAI,CAACI,WAAL,CAAiBC,OAAjB,CAAyB,IAAzB,EAA+B,EAA/B,IAAqC,WAD3B;AAEhBC,MAAAA,KAAK,EAAEN,IAAI,CAACO,OAAL,CAAaD;AAFJ,KAAlB;AAKA,WAAO,IAAP;AACD,GARH;;AAAA,SAUSE,OAVT,GAUS;AACL,WAAO,iBAAP;AACD,GAZH;;AAAA,SAcSC,WAdT,GAcS;AACL,WAAO,aAAP;AACD,GAhBH;;AAAA,SAkBSC,cAlBT,GAkBS;AACL,WAAO,0CAAP;AACD,GApBH;;AAAA,SAsBSC,OAtBT,GAsBS;AACL,WAAO,aAAP;AACD,GAxBH;;AAAA,SA0BSC,QA1BT,GA0BS;AACL,WAAO,QAAP;AACD,GA5BH;;AAAA,SA8BSC,WA9BT,GA8BS;AACL,WAAO,UAAP;AACD,GAhCH;;AAAA,SAkCSC,cAlCT,GAkCS;AACL,WAAOC,mBAAmB,CAACC,YAA3B;AACD,GApCH;;AAAA,SAsCSC,WAtCT,GAsCS;AACL,WAAO,YAAP;AACD,GAxCH;;AAAA,SA0CSC,aA1CT,GA0CS;AACL,WAAO,sBAAP;AACD,GA5CH;;AAAA,SA8CSC,iBA9CT,GA8CS;AACL,WAAO,CACL;AACEC,MAAAA,IAAI,EAAE,aADR;AAEEC,MAAAA,YAAY,EAAE,EAFhB;AAGEC,MAAAA,SAAS,EAAE,QAHb;AAIEC,MAAAA,QAAQ,EAAE;AAJZ,KADK,CAAP;AAQD,GAvDH;;AAAA;AAAA,EAAqCC,QAArC;;ICAaC,mBAAb;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,SACS1B,OADT,GACS,iBAAQC,IAAR,EAAmB0B,SAAnB;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAkC5B,IAAI,CAAC6B,EAAvC,GAA4C,KAA5C,GAAoD7B,IAAI,CAACoB,IAArE;AAEA,WAAO,IAAP;AACD,GALH;;AAAA,SAOSZ,OAPT,GAOS;AACL,WAAO,qBAAP;AACD,GATH;;AAAA,SAWSC,WAXT,GAWS;AACL,WAAO,YAAP;AACD,GAbH;;AAAA,SAeSqB,UAfT,GAeS,oBAAW9B,IAAX;AACL,QAAM+B,YAAY,GAAG/B,IAAI,CAAC+B,YAAL,CAAkB1B,OAAlB,CAA0B,IAA1B,EAAgC,EAAhC,CAArB;AAEA,QAAM2B,YAAY,GAAGD,YAAY,GAAG,iBAApC;AACA,QAAME,aAAa,GAAGF,YAAY,GAAG,kBAArC;AACA,QAAMG,cAAc,GAAGH,YAAY,GAAG,mBAAtC;AACA,QAAMI,oBAAoB,GAAGJ,YAAY,GAAG,oBAA5C;AAEA,WAAO,UAACK,KAAD,EAAaC,MAAb;UAACD;AAAAA,QAAAA,QAAQ;;;AACd,cAAQC,MAAM,CAAClC,IAAf;AACE,aAAK8B,aAAL;AAAoB;AAClB,mBAAO,EAAP;AACD;;AACD,aAAKC,cAAL;AAAqB;AACnB,mBAAOG,MAAM,CAACC,IAAd;AACD;;AACD,aAAKN,YAAL;AAAmB;AACjB,gBAAMO,QAAQ,GAAQH,KAAK,CAACI,KAAN,EAAtB;AACAD,YAAAA,QAAQ,CAACE,IAAT,CAAcJ,MAAM,CAAC/B,KAArB;AACA,mBAAOiC,QAAP;AACD;;AACD,aAAKJ,oBAAL;AAA2B;AACzB,gBAAII,SAAQ,GAAGH,KAAK,CAACM,GAAN,CAAU,UAACC,IAAD;AACvB,kBACEA,IAAI,CAAC3C,IAAI,CAAC4C,cAAN,CAAJ,KAA8BP,MAAM,CAAC9B,OAAP,CAAeP,IAAI,CAAC4C,cAApB,CADhC,EAEE;AACA,oCAAYP,MAAM,CAAC9B,OAAnB;AACD;;AACD,kCAAYoC,IAAZ;AACD,aAPc,CAAf;;AAQA,mBAAOJ,SAAP;AACD;;AACD;AACE,iBAAOH,KAAP;AAxBJ;AA0BD,KA3BD;AA4BD,GAnDH;;AAAA,SAqDSzB,OArDT,GAqDS;AACL,WAAO,YAAP;AACD,GAvDH;;AAAA,SAyDSC,QAzDT,GAyDS;AACL,WAAO,MAAP;AACD,GA3DH;;AAAA,SA6DSC,WA7DT,GA6DS;AACL,WAAO,UAAP;AACD,GA/DH;;AAAA,SAiESC,cAjET,GAiES;AACL,WAAO+B,mBAAA,CAA+B7B,YAAtC;AACD,GAnEH;;AAAA,SAqESC,WArET,GAqES;AACL,WAAO,YAAP;AACD,GAvEH;;AAAA,SAyESC,aAzET,GAyES;AACL,WAAO,sBAAP;AACD,GA3EH;;AAAA,SA6ESC,iBA7ET,GA6ES;AACL,WAAO,CACL;AACEC,MAAAA,IAAI,EAAE,cADR;AAEEC,MAAAA,YAAY,EAAE,EAFhB;AAGEC,MAAAA,SAAS,EAAE,QAHb;AAIEC,MAAAA,QAAQ,EAAE;AAJZ,KADK,CAAP;AAQD,GAtFH;;AAAA;AAAA,EAAyCsB,QAAzC;;ICAaC,0BAAb;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,SACS/C,OADT,GACS,iBAAQC,IAAR,EAAmBC,QAAnB;AACLA,IAAAA,QAAQ,CAACC,QAAT,CAAkB;AAChBC,MAAAA,IAAI,EAAEH,IAAI,CAACI,WAAL,CAAiBC,OAAjB,CAAyB,IAAzB,EAA+B,EAA/B,IAAqC,mBAD3B;AAEhBiC,MAAAA,IAAI,EAAEtC,IAAI,CAACO,OAAL,CAAa+B;AAFH,KAAlB;AAKA,WAAO,IAAP;AACD,GARH;;AAAA,SAUS9B,OAVT,GAUS;AACL,WAAO,4BAAP;AACD,GAZH;;AAAA,SAcSC,WAdT,GAcS;AACL,WAAO,wBAAP;AACD,GAhBH;;AAAA,SAkBSE,OAlBT,GAkBS;AACL,WAAO,wBAAP;AACD,GApBH;;AAAA,SAsBSC,QAtBT,GAsBS;AACL,WAAO,QAAP;AACD,GAxBH;;AAAA,SA0BSC,WA1BT,GA0BS;AACL,WAAO,UAAP;AACD,GA5BH;;AAAA,SA8BSC,cA9BT,GA8BS;AACL,WAAOC,mBAAmB,CAACC,YAA3B;AACD,GAhCH;;AAAA,SAkCSC,WAlCT,GAkCS;AACL,WAAO,YAAP;AACD,GApCH;;AAAA,SAsCSC,aAtCT,GAsCS;AACL,WAAO,sBAAP;AACD,GAxCH;;AAAA,SA0CSC,iBA1CT,GA0CS;AACL,WAAO,CACL;AACEC,MAAAA,IAAI,EAAE,aADR;AAEEC,MAAAA,YAAY,EAAE,EAFhB;AAGEC,MAAAA,SAAS,EAAE,QAHb;AAIEC,MAAAA,QAAQ,EAAE;AAJZ,KADK,CAAP;AAQD,GAnDH;;AAAA;AAAA,EAAgDC,QAAhD;;ICAauB,gCAAb;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,SACShD,OADT,GACS,iBAAQC,IAAR,EAAmBC,QAAnB;AACLA,IAAAA,QAAQ,CAACC,QAAT,CAAkB;AAChBC,MAAAA,IAAI,EAAEH,IAAI,CAACI,WAAL,CAAiBC,OAAjB,CAAyB,IAAzB,EAA+B,EAA/B,IAAqC,oBAD3B;AAEhBE,MAAAA,OAAO,EAAEP,IAAI,CAACO;AAFE,KAAlB;AAKA,WAAO,IAAP;AACD,GARH;;AAAA,SAUSC,OAVT,GAUS;AACL,WAAO,kCAAP;AACD,GAZH;;AAAA,SAcSC,WAdT,GAcS;AACL,WAAO,8BAAP;AACD,GAhBH;;AAAA,SAkBSE,OAlBT,GAkBS;AACL,WAAO,8BAAP;AACD,GApBH;;AAAA,SAsBSC,QAtBT,GAsBS;AACL,WAAO,QAAP;AACD,GAxBH;;AAAA,SA0BSC,WA1BT,GA0BS;AACL,WAAO,UAAP;AACD,GA5BH;;AAAA,SA8BSC,cA9BT,GA8BS;AACL,WAAOC,mBAAmB,CAACC,YAA3B;AACD,GAhCH;;AAAA,SAkCSC,WAlCT,GAkCS;AACL,WAAO,YAAP;AACD,GApCH;;AAAA,SAsCSC,aAtCT,GAsCS;AACL,WAAO,sBAAP;AACD,GAxCH;;AAAA,SA0CSC,iBA1CT,GA0CS;AACL,WAAO,CACL;AACEC,MAAAA,IAAI,EAAE,aADR;AAEEC,MAAAA,YAAY,EAAE,EAFhB;AAGEC,MAAAA,SAAS,EAAE,QAHb;AAIEC,MAAAA,QAAQ,EAAE;AAJZ,KADK,CAAP;AAQD,GAnDH;;AAAA;AAAA,EAAsDC,QAAtD;;ICEawB,sBAAb;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,SACSjD,OADT,GACS,iBAAQC,IAAR,EAAmB0B,SAAnB,EAAmCuB,UAAnC;AACLtB,IAAAA,OAAO,CAACC,GAAR,CACE,qCAAqC5B,IAAI,CAAC6B,EAA1C,GAA+C,KAA/C,GAAuD7B,IAAI,CAACoB,IAD9D;AAIA,WAAO,IAAP;AACD,GAPH;;AAAA,SASSZ,OATT,GASS;AACL,WAAO,wBAAP;AACD,GAXH;;AAAA,SAaSC,WAbT,GAaS;AACL,WAAO,eAAP;AACD,GAfH;;AAAA,SAiBSqB,UAjBT,GAiBS,oBAAW9B,IAAX;AACL,QAAMkD,QAAQ,GAAGlD,IAAI,CAAC+B,YAAL,CAAkB1B,OAAlB,CAA0B,IAA1B,EAAgC,EAAhC,IAAsC,WAAvD;AACA,WAAO,UAAC+B,KAAD,EAAaC,MAAb;UAACD;AAAAA,QAAAA,QAAQ;;;AACd,UAAI;AACF,gBAAQC,MAAM,CAAClC,IAAf;AACE,eAAK+C,QAAL;AACE,gBAAIb,MAAM,CAAC/B,KAAP,KAAiB6C,SAArB,EAAgC;AAC9B,qBAAOd,MAAM,CAAC/B,KAAd;AACD,aAFD,MAEO;AACL,qBAAO8B,KAAP;AACD;;AACH;AACE,mBAAOA,KAAP;AARJ;AAUD,OAXD,CAWE,OAAOgB,GAAP,EAAY;AACZ,eAAOhB,KAAP;AACD;AACF,KAfD;AAgBD,GAnCH;;AAAA,SAqCSzB,OArCT,GAqCS;AACL,WAAO,eAAP;AACD,GAvCH;;AAAA,SAyCSC,QAzCT,GAyCS;AACL,WAAO,MAAP;AACD,GA3CH;;AAAA,SA6CSC,WA7CT,GA6CS;AACL,WAAO,UAAP;AACD,GA/CH;;AAAA,SAiDSC,cAjDT,GAiDS;AACL,WAAOC,mBAAmB,CAACC,YAA3B;AACD,GAnDH;;AAAA,SAqDSC,WArDT,GAqDS;AACL,WAAO,YAAP;AACD,GAvDH;;AAAA,SAyDSC,aAzDT,GAyDS;AACL,WAAO,sBAAP;AACD,GA3DH;;AAAA,SA6DSC,iBA7DT,GA6DS;AACL,WAAO,CACL;AAAEC,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,YAAY,EAAE,EAA/B;AAAmCC,MAAAA,SAAS,EAAE,QAA9C;AAAwDC,MAAAA,QAAQ,EAAE;AAAlE,KADK,EAEL;AACEH,MAAAA,IAAI,EAAE,cADR;AAEEC,MAAAA,YAAY,EAAE,EAFhB;AAGEC,MAAAA,SAAS,EAAE,QAHb;AAIEC,MAAAA,QAAQ,EAAE;AAJZ,KAFK,CAAP;AASD,GAvEH;;AAAA;AAAA,EAA4CC,QAA5C;;ICFa6B,yBAAb;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,SACStD,OADT,GACS,iBAAQC,IAAR,EAAmBC,QAAnB;AACLA,IAAAA,QAAQ,CAACC,QAAT,CAAkB;AAChBC,MAAAA,IAAI,EAAEH,IAAI,CAACI,WAAL,CAAiBC,OAAjB,CAAyB,IAAzB,EAA+B,EAA/B,IAAqC,kBAD3B;AAEhBC,MAAAA,KAAK,EAAEN,IAAI,CAACO,OAAL,CAAaD;AAFJ,KAAlB;AAKA,WAAO,IAAP;AACD,GARH;;AAAA,SAUSE,OAVT,GAUS;AACL,WAAO,2BAAP;AACD,GAZH;;AAAA,SAcSC,WAdT,GAcS;AACL,WAAO,2BAAP;AACD,GAhBH;;AAAA,SAkBSE,OAlBT,GAkBS;AACL,WAAO,uBAAP;AACD,GApBH;;AAAA,SAsBSC,QAtBT,GAsBS;AACL,WAAO,QAAP;AACD,GAxBH;;AAAA,SA0BSC,WA1BT,GA0BS;AACL,WAAO,UAAP;AACD,GA5BH;;AAAA,SA8BSC,cA9BT,GA8BS;AACL,WAAOC,mBAAmB,CAACC,YAA3B;AACD,GAhCH;;AAAA,SAkCSC,WAlCT,GAkCS;AACL,WAAO,YAAP;AACD,GApCH;;AAAA,SAsCSC,aAtCT,GAsCS;AACL,WAAO,sBAAP;AACD,GAxCH;;AAAA,SA0CSC,iBA1CT,GA0CS;AACL,WAAO,CACL;AACEC,MAAAA,IAAI,EAAE,aADR;AAEEC,MAAAA,YAAY,EAAE,EAFhB;AAGEC,MAAAA,SAAS,EAAE,QAHb;AAIEC,MAAAA,QAAQ,EAAE;AAJZ,KADK,CAAP;AAQD,GAnDH;;AAAA;AAAA,EAA+CC,QAA/C;;ICAa8B,eAAb;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,SACSvD,OADT,GACS,iBAAQC,IAAR,EAAmBC,QAAnB,EAAkCgD,UAAlC;AACL,WAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV;AACjB,UACEzD,IAAI,CAAC0D,QAAL,KAAkBP,SAAlB,IACAnD,IAAI,CAAC2D,OAAL,KAAiBR,SADjB,IAEAnD,IAAI,CAAC0D,QAAL,KAAkB,EAFlB,IAGA1D,IAAI,CAAC2D,OAAL,KAAiB,EAJnB,EAKE;AAAA;;AACA,YAAMC,WAAW,GAAG5D,IAAI,CAAC6D,WAAL,CAAiBxD,OAAjB,CAAyB,IAAzB,EAA+B,EAA/B,CAApB;AACA,YAAMyD,KAAK,GAAG7D,QAAQ,CAAC8D,QAAT,GAAoBC,QAApB,EAAd;AAEA,YAAMzD,OAAO,GAAG0D,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBlE,IAAI,CAACO,OAAvB,uCACbP,IAAI,CAAC0D,QADQ,IACGI,KAAK,CAACF,WAAD,CAAL,CAAmB5D,IAAI,CAAC2D,OAAxB,CADH,kBAAhB;AAGAH,QAAAA,OAAO,CAACjD,OAAD,CAAP;AACD,OAbD,MAaO;AACLkD,QAAAA,MAAM;AACP;AACF,KAjBM,CAAP;AAkBD,GApBH;;AAAA,SAsBSjD,OAtBT,GAsBS;AACL,WAAO,iBAAP;AACD,GAxBH;;AAAA,SA0BSC,WA1BT,GA0BS;AACL,WAAO,aAAP;AACD,GA5BH;;AAAA,SA8BSC,cA9BT,GA8BS;AACL,WAAO,gGAAP;AACD,GAhCH;;AAAA,SAkCSC,OAlCT,GAkCS;AACL,WAAO,aAAP;AACD,GApCH;;AAAA,SAsCSC,QAtCT,GAsCS;AACL,WAAO,QAAP;AACD,GAxCH;;AAAA,SA0CSC,WA1CT,GA0CS;AACL,WAAO,UAAP;AACD,GA5CH;;AAAA,SA8CSC,cA9CT,GA8CS;AACL,WAAOC,mBAAmB,CAACC,YAA3B;AACD,GAhDH;;AAAA,SAkDSC,WAlDT,GAkDS;AACL,WAAO,YAAP;AACD,GApDH;;AAAA,SAsDSC,aAtDT,GAsDS;AACL,WAAO,sBAAP;AACD,GAxDH;;AAAA,SA0DSC,iBA1DT,GA0DS;AACL,WAAO,CACL;AACEC,MAAAA,IAAI,EAAE,SADR;AAEEC,MAAAA,YAAY,EAAE,EAFhB;AAGEC,MAAAA,SAAS,EAAE,QAHb;AAIEC,MAAAA,QAAQ,EAAE;AAJZ,KADK,EAOL;AACEH,MAAAA,IAAI,EAAE,UADR;AAEEC,MAAAA,YAAY,EAAE,EAFhB;AAGEC,MAAAA,SAAS,EAAE,QAHb;AAIEC,MAAAA,QAAQ,EAAE;AAJZ,KAPK,EAaL;AACEH,MAAAA,IAAI,EAAE,aADR;AAEEC,MAAAA,YAAY,EAAE,EAFhB;AAGEC,MAAAA,SAAS,EAAE,QAHb;AAIEC,MAAAA,QAAQ,EAAE;AAJZ,KAbK,CAAP;AAoBD,GA/EH;;AAAA;AAAA,EAAqCC,QAArC;;ICAa2C,YAAb;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,SACSpE,OADT,GACS,iBAAQC,IAAR,EAAmBC,QAAnB,EAAkCgD,UAAlC;AACL,WAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV;AACjB,UAAIzD,IAAI,CAAC0D,QAAL,KAAkBP,SAAlB,IAA+BnD,IAAI,CAAC0D,QAAL,KAAkB,EAArD,EAAyD;AAAA;;AACvD,YAAME,WAAW,GAAG5D,IAAI,CAAC6D,WAAL,CAAiBxD,OAAjB,CAAyB,IAAzB,EAA+B,EAA/B,CAApB;AAEA,YAAMyD,KAAK,GAAG7D,QAAQ,CAAC8D,QAAT,GAAoBC,QAApB,EAAd;AAEA,YAAMzD,OAAO,GAAG0D,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBlE,IAAI,CAACO,OAAvB,uCACbP,IAAI,CAAC0D,QADQ,IACGI,KAAK,CAACF,WAAD,CADR,kBAAhB;AAGAJ,QAAAA,OAAO,CAACjD,OAAD,CAAP;AACD,OATD,MASO;AACLkD,QAAAA,MAAM;AACP;AACF,KAbM,CAAP;AAcD,GAhBH;;AAAA,SAkBSjD,OAlBT,GAkBS;AACL,WAAO,cAAP;AACD,GApBH;;AAAA,SAsBSC,WAtBT,GAsBS;AACL,WAAO,UAAP;AACD,GAxBH;;AAAA,SA0BSC,cA1BT,GA0BS;AACL,WAAO,wFAAP;AACD,GA5BH;;AAAA,SA8BSC,OA9BT,GA8BS;AACL,WAAO,UAAP;AACD,GAhCH;;AAAA,SAkCSC,QAlCT,GAkCS;AACL,WAAO,MAAP;AACD,GApCH;;AAAA,SAsCSC,WAtCT,GAsCS;AACL,WAAO,UAAP;AACD,GAxCH;;AAAA,SA0CSC,cA1CT,GA0CS;AACL,WAAOC,mBAAmB,CAACC,YAA3B;AACD,GA5CH;;AAAA,SA8CSC,WA9CT,GA8CS;AACL,WAAO,YAAP;AACD,GAhDH;;AAAA,SAkDSC,aAlDT,GAkDS;AACL,WAAO,sBAAP;AACD,GApDH;;AAAA,SAsDSC,iBAtDT,GAsDS;AACL,WAAO,CACL;AACEC,MAAAA,IAAI,EAAE,UADR;AAEEC,MAAAA,YAAY,EAAE,EAFhB;AAGEC,MAAAA,SAAS,EAAE,QAHb;AAIEC,MAAAA,QAAQ,EAAE;AAJZ,KADK,EAOL;AACEH,MAAAA,IAAI,EAAE,aADR;AAEEC,MAAAA,YAAY,EAAE,EAFhB;AAGEC,MAAAA,SAAS,EAAE,QAHb;AAIEC,MAAAA,QAAQ,EAAE;AAJZ,KAPK,CAAP;AAcD,GArEH;;AAAA;AAAA,EAAkCC,QAAlC;;ICAa4C,qBAAb;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,SACSrE,OADT,GACS,iBAAQC,IAAR,EAAmB0B,SAAnB;AACLC,IAAAA,OAAO,CAACC,GAAR,CACE,oCAAoC5B,IAAI,CAAC6B,EAAzC,GAA8C,KAA9C,GAAsD7B,IAAI,CAACoB,IAD7D;AAIA,WAAO,IAAP;AACD,GAPH;;AAAA,SASSZ,OATT,GASS;AACL,WAAO,uBAAP;AACD,GAXH;;AAAA,SAaSC,WAbT,GAaS;AACL,WAAO,cAAP;AACD,GAfH;;AAAA,SAiBSqB,UAjBT,GAiBS,oBAAW9B,IAAX;AACL,QAAMqE,cAAc,GAAGrE,IAAI,CAAC+B,YAAL,CAAkB1B,OAAlB,CAA0B,IAA1B,EAAgC,EAAhC,IAAsC,cAA7D;AACA,WAAO,UAAC+B,KAAD,EAAaC,MAAb;;;UAACD;AAAAA,QAAAA,QAAQ;;;AACd,cAAQC,MAAM,CAAClC,IAAf;AACE,aAAKkE,cAAL;AACE,iBAAOJ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB9B,KAAlB,uCAA4BC,MAAM,CAACiC,GAAnC,IAAyCjC,MAAM,CAAC/B,KAAhD,kBAAP;;AACF;AACE,iBAAO8B,KAAP;AAJJ;AAMD,KAPD;AAQD,GA3BH;;AAAA,SA6BSzB,OA7BT,GA6BS;AACL,WAAO,cAAP;AACD,GA/BH;;AAAA,SAiCSC,QAjCT,GAiCS;AACL,WAAO,MAAP;AACD,GAnCH;;AAAA,SAqCSC,WArCT,GAqCS;AACL,WAAO,UAAP;AACD,GAvCH;;AAAA,SAyCSC,cAzCT,GAyCS;AACL,WAAOC,mBAAmB,CAACC,YAA3B;AACD,GA3CH;;AAAA,SA6CSC,WA7CT,GA6CS;AACL,WAAO,YAAP;AACD,GA/CH;;AAAA,SAiDSC,aAjDT,GAiDS;AACL,WAAO,sBAAP;AACD,GAnDH;;AAAA,SAqDSC,iBArDT,GAqDS;AACL,WAAO,CACL;AACEC,MAAAA,IAAI,EAAE,cADR;AAEEC,MAAAA,YAAY,EAAE,EAFhB;AAGEC,MAAAA,SAAS,EAAE,QAHb;AAIEC,MAAAA,QAAQ,EAAE;AAJZ,KADK,CAAP;AAQD,GA9DH;;AAAA;AAAA,EAA2CC,QAA3C;;ICAa+C,wBAAb;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,SACSxE,OADT,GACS,iBAAQC,IAAR,EAAmBC,QAAnB;AACLA,IAAAA,QAAQ,CAACC,QAAT,CAAkB;AAChBC,MAAAA,IAAI,EAAEH,IAAI,CAACI,WAAL,CAAiBC,OAAjB,CAAyB,IAAzB,EAA+B,EAA/B,IAAqC,iBAD3B;AAEhBC,MAAAA,KAAK,EAAEN,IAAI,CAACO,OAAL,CAAaD;AAFJ,KAAlB;AAKA,WAAO,IAAP;AACD,GARH;;AAAA,SAUSE,OAVT,GAUS;AACL,WAAO,0BAAP;AACD,GAZH;;AAAA,SAcSC,WAdT,GAcS;AACL,WAAO,sBAAP;AACD,GAhBH;;AAAA,SAkBSE,OAlBT,GAkBS;AACL,WAAO,sBAAP;AACD,GApBH;;AAAA,SAsBSC,QAtBT,GAsBS;AACL,WAAO,QAAP;AACD,GAxBH;;AAAA,SA0BSC,WA1BT,GA0BS;AACL,WAAO,UAAP;AACD,GA5BH;;AAAA,SA8BSC,cA9BT,GA8BS;AACL,WAAOC,mBAAmB,CAACC,YAA3B;AACD,GAhCH;;AAAA,SAkCSC,WAlCT,GAkCS;AACL,WAAO,YAAP;AACD,GApCH;;AAAA,SAsCSC,aAtCT,GAsCS;AACL,WAAO,sBAAP;AACD,GAxCH;;AAAA,SA0CSC,iBA1CT,GA0CS;AACL,WAAO,CACL;AACEC,MAAAA,IAAI,EAAE,aADR;AAEEC,MAAAA,YAAY,EAAE,EAFhB;AAGEC,MAAAA,SAAS,EAAE,QAHb;AAIEC,MAAAA,QAAQ,EAAE;AAJZ,KADK,CAAP;AAQD,GAnDH;;AAAA;AAAA,EAA8CC,QAA9C;;ICAagD,qBAAb;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,SACSzE,OADT,GACS,iBAAQC,IAAR,EAAmBC,QAAnB;AACLA,IAAAA,QAAQ,CAACwE,SAAT,CAAmBvE,QAAnB,CAA4B;AAC1BoE,MAAAA,GAAG,EAAEtE,IAAI,CAAC0E,WADgB;AAE1BvE,MAAAA,IAAI,EAAEH,IAAI,CAACI,WAAL,CAAiBC,OAAjB,CAAyB,IAAzB,EAA+B,EAA/B,IAAqC,cAFjB;AAG1BC,MAAAA,KAAK,EAAEN,IAAI,CAACO,OAAL,CAAaD;AAHM,KAA5B;AAMA,WAAO,IAAP;AACD,GATH;;AAAA,SAWSI,cAXT,GAWS;AACL,WAAO,iGAAP;AACD,GAbH;;AAAA,SAeSF,OAfT,GAeS;AACL,WAAO,uBAAP;AACD,GAjBH;;AAAA,SAmBSC,WAnBT,GAmBS;AACL,WAAO,mBAAP;AACD,GArBH;;AAAA,SAuBSE,OAvBT,GAuBS;AACL,WAAO,mBAAP;AACD,GAzBH;;AAAA,SA2BSC,QA3BT,GA2BS;AACL,WAAO,QAAP;AACD,GA7BH;;AAAA,SA+BSC,WA/BT,GA+BS;AACL,WAAO,UAAP;AACD,GAjCH;;AAAA,SAmCSC,cAnCT,GAmCS;AACL,WAAOC,mBAAmB,CAACC,YAA3B;AACD,GArCH;;AAAA,SAuCSC,WAvCT,GAuCS;AACL,WAAO,YAAP;AACD,GAzCH;;AAAA,SA2CSC,aA3CT,GA2CS;AACL,WAAO,sBAAP;AACD,GA7CH;;AAAA,SA+CSC,iBA/CT,GA+CS;AACL,WAAO,CACL;AACEC,MAAAA,IAAI,EAAE,aADR;AAEEC,MAAAA,YAAY,EAAE,EAFhB;AAGEC,MAAAA,SAAS,EAAE,QAHb;AAIEC,MAAAA,QAAQ,EAAE;AAJZ,KADK,EAOL;AACEH,MAAAA,IAAI,EAAE,aADR;AAEEC,MAAAA,YAAY,EAAE,EAFhB;AAGEC,MAAAA,SAAS,EAAE,QAHb;AAIEC,MAAAA,QAAQ,EAAE;AAJZ,KAPK,CAAP;AAcD,GA9DH;;AAAA;AAAA,EAA2CC,QAA3C;;ICAamD,oBAAb;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,SACS5E,OADT,GACS,iBAAQC,IAAR;AACL2B,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAmC5B,IAAI,CAAC6B,EAAxC,GAA6C,KAA7C,GAAqD7B,IAAI,CAACoB,IAAtE;AAEA,WAAO,IAAP;AACD,GALH;;AAAA,SAOSZ,OAPT,GAOS;AACL,WAAO,sBAAP;AACD,GATH;;AAAA,SAWSC,WAXT,GAWS;AACL,WAAO,kBAAP;AACD,GAbH;;AAAA,SAeSE,OAfT,GAeS;AACL,WAAO,kBAAP;AACD,GAjBH;;AAAA,SAmBSC,QAnBT,GAmBS;AACL,WAAO,QAAP;AACD,GArBH;;AAAA,SAuBSC,WAvBT,GAuBS;AACL,WAAO,UAAP;AACD,GAzBH;;AAAA,SA2BSC,cA3BT,GA2BS;AACL,WAAOC,mBAAmB,CAACC,YAA3B;AACD,GA7BH;;AAAA,SA+BSC,WA/BT,GA+BS;AACL,WAAO,YAAP;AACD,GAjCH;;AAAA,SAmCSC,aAnCT,GAmCS;AACL,WAAO,sBAAP;AACD,GArCH;;AAAA,SAuCS0D,SAvCT,GAuCS,mBAAUC,WAAV,EAA+BC,aAA/B,EAAmDC,WAAnD;AACL,WAAO,UAACC,SAAD,EAAiBzE,OAAjB;AACL,aAAO,UAACL,QAAD;AACL;AACA8E,QAAAA,SAAS,CAACC,OAAV,CAAkBvC,GAAlB,CAAsB,UAAC1C,IAAD;AACpB+E,UAAAA,WAAW,CAACG,IAAZ,CAAiBlF,IAAI,CAACmF,UAAL,CAAgBC,QAAhB,EAAjB,EAA6C7E,OAA7C,EAAsDL,QAAtD;AACA,iBAAO,IAAP;AACD,SAHD;AAID,OAND;AAOD,KARD;AASD,GAjDH;;AAAA;AAAA,EAA0CsB,QAA1C;;ACCA,IAAI6D,OAAO,GAAG,SAAVA,OAAU,CAAS/E,KAAT,EAAqBgF,KAArB;AACZ;AACA,MAAInF,IAAI,GAAG8D,MAAM,CAACsB,SAAP,CAAiBH,QAAjB,CAA0BI,IAA1B,CAA+BlF,KAA/B,CAAX;;AAGA,MAAIH,IAAI,KAAK8D,MAAM,CAACsB,SAAP,CAAiBH,QAAjB,CAA0BI,IAA1B,CAA+BF,KAA/B,CAAb,EAAoD,OAAO,KAAP;;AAGpD,MAAI,CAAC,gBAAD,EAAmB,iBAAnB,EAAsCG,OAAtC,CAA8CtF,IAA9C,IAAsD,CAA1D,EAA6D,OAAO,KAAP;;AAG7D,MAAIuF,QAAQ,GACVvF,IAAI,KAAK,gBAAT,GAA4BG,KAAK,CAACqF,MAAlC,GAA2C1B,MAAM,CAAC2B,IAAP,CAAYtF,KAAZ,EAAmBqF,MADhE;AAEA,MAAIE,QAAQ,GACV1F,IAAI,KAAK,gBAAT,GAA4BmF,KAAK,CAACK,MAAlC,GAA2C1B,MAAM,CAAC2B,IAAP,CAAYN,KAAZ,EAAmBK,MADhE;AAEA,MAAID,QAAQ,KAAKG,QAAjB,EAA2B,OAAO,KAAP;;AAG3B,MAAIC,OAAO,GAAG,SAAVA,OAAU,CAASC,KAAT,EAAqBC,KAArB;AACZ;AACA,QAAIC,QAAQ,GAAGhC,MAAM,CAACsB,SAAP,CAAiBH,QAAjB,CAA0BI,IAA1B,CAA+BO,KAA/B,CAAf;;AAGA,QAAI,CAAC,gBAAD,EAAmB,iBAAnB,EAAsCN,OAAtC,CAA8CQ,QAA9C,KAA2D,CAA/D,EAAkE;AAChE,UAAI,CAACZ,OAAO,CAACU,KAAD,EAAQC,KAAR,CAAZ,EAA4B,OAAO,KAAP;AAC7B,KAFD;AAAA,SAKK;AACH;AACA,YAAIC,QAAQ,KAAKhC,MAAM,CAACsB,SAAP,CAAiBH,QAAjB,CAA0BI,IAA1B,CAA+BQ,KAA/B,CAAjB,EAAwD,OAAO,KAAP,CAFrD;AAKH;;AACA,YAAIC,QAAQ,KAAK,mBAAjB,EAAsC;AACpC,cAAIF,KAAK,CAACX,QAAN,OAAqBY,KAAK,CAACZ,QAAN,EAAzB,EAA2C,OAAO,KAAP;AAC5C,SAFD,MAEO;AACL,cAAIW,KAAK,KAAKC,KAAd,EAAqB,OAAO,KAAP;AACtB;AACF;;AACD,WAAO,IAAP;AACD,GAvBD;;;AA0BA,MAAI7F,IAAI,KAAK,gBAAb,EAA+B;AAC7B,SAAK,IAAI+F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,QAApB,EAA8BQ,CAAC,EAA/B,EAAmC;AACjC,UAAIJ,OAAO,CAACxF,KAAK,CAAC4F,CAAD,CAAN,EAAWZ,KAAK,CAACY,CAAD,CAAhB,CAAP,KAAgC,KAApC,EAA2C,OAAO,KAAP;AAC5C;AACF,GAJD,MAIO;AACL,SAAK,IAAI5B,GAAT,IAAgBhE,KAAhB,EAAuB;AACrB,UAAIA,KAAK,CAAC6F,cAAN,CAAqB7B,GAArB,CAAJ,EAA+B;AAC7B,YAAIwB,OAAO,CAACxF,KAAK,CAACgE,GAAD,CAAN,EAAagB,KAAK,CAAChB,GAAD,CAAlB,CAAP,KAAoC,KAAxC,EAA+C,OAAO,KAAP;AAChD;AACF;AACF;;;AAGD,SAAO,IAAP;AACD,CA1DD;;AA4DA,IAAa8B,iBAAb;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,SACSrG,OADT,GACS,iBAAQC,IAAR,EAAmBC,QAAnB;AACL,QAAMoG,UAAU,GAAGC,UAAU,CAACC,MAAX,CAAkB,UAACC,QAAD;AACnC,UAAI;AACF,YAAIxG,IAAI,CAACyG,YAAL,KAAsBtD,SAAtB,IAAmCnD,IAAI,CAACyG,YAAL,KAAsB,EAA7D,EAAiE;AAC/D,cAAMC,sBAAsB,GAAGzG,QAAQ,CAAC0G,aAAT,CAAuB,aAAvB,CAA/B;;AAEA,cACED,sBAAsB,KAAKvD,SAA3B,IACAuD,sBAAsB,KAAK,KAF7B,EAGE;AACA,gBAAME,oBAAoB,GAAG;AAC3BC,cAAAA,QAAQ,EAAE;AACRlF,gBAAAA,OAAO,CAACC,GAAR,CACE,8CADF,EAEE5B,IAAI,CAACoB,IAFP;AAID,eAN0B;AAO3B0F,cAAAA,KAAK,EAAE,eAAC1D,GAAD;AACLoD,gBAAAA,QAAQ,CAACM,KAAT,CAAe1D,GAAf;AACD,eAT0B;AAU3B2D,cAAAA,IAAI,EAAE,cAACxG,OAAD;AACJ;AACA;AACA;AACA,oBACEP,IAAI,CAACyG,YAAL,KAAsBtD,SAAtB,IACAnD,IAAI,CAACyG,YAAL,KAAsB,IADtB,IAEAzG,IAAI,CAACyG,YAAL,KAAsB,EAHxB,EAIE;AACA,sBACE,CAACpB,OAAO,CACN9E,OAAO,CAACyG,SAAR,CAAkBhH,IAAI,CAACyG,YAAvB,CADM,EAENlG,OAAO,CAAC0G,SAAR,CAAkBjH,IAAI,CAACyG,YAAvB,CAFM,CADV,EAKE;AACAD,oBAAAA,QAAQ,CAACO,IAAT,CAAcxG,OAAO,CAACyG,SAAtB;AACD;AACF;AACF;AA5B0B,aAA7B;AA+BAN,YAAAA,sBAAsB,CAACQ,SAAvB,CAAiCN,oBAAjC;AACD,WApCD,MAoCO;AACLJ,YAAAA,QAAQ,CAACM,KAAT,CACE,iDADF,EAEE9G,IAAI,CAACmH,OAFP;AAID;AACF,SA7CD,MA6CO;AACLX,UAAAA,QAAQ,CAACM,KAAT,CAAe,+CAAf;AACD;AACF,OAjDD,CAiDE,OAAO1D,GAAP,EAAY;AACZoD,QAAAA,QAAQ,CAACM,KAAT,CAAe1D,GAAf;AACD;AACF,KArDkB,CAAnB;AAuDA,WAAOiD,UAAP;AACD,GA1DH;;AAAA,SA4DSe,8BA5DT,GA4DS;AACL,WAAO,IAAP;AACD,GA9DH;;AAAA,SA+DSC,wBA/DT,GA+DS;AACL,WAAO,IAAP;AACD,GAjEH;;AAAA,SAmES3G,cAnET,GAmES;AACL,WAAO,yDAAP;AACD,GArEH;;AAAA,SAuESF,OAvET,GAuES;AACL,WAAO,mBAAP;AACD,GAzEH;;AAAA,SA2ESC,WA3ET,GA2ES;AACL,WAAO,eAAP;AACD,GA7EH;;AAAA,SA+ESE,OA/ET,GA+ES;AACL,WAAO,eAAP;AACD,GAjFH;;AAAA,SAmFSC,QAnFT,GAmFS;AACL,WAAO,aAAP;AACD,GArFH;;AAAA,SAuFS0G,eAvFT,GAuFS;AACL,WAAO,WAAP;AACD,GAzFH;;AAAA,SA2FSzG,WA3FT,GA2FS;AACL,WAAO,MAAP;AACD,GA7FH;;AAAA,SA+FSC,cA/FT,GA+FS;AACL,WAAOC,mBAAmB,CAACC,YAA3B;AACD,GAjGH;;AAAA,SAmGSC,WAnGT,GAmGS;AACL,WAAO,YAAP;AACD,GArGH;;AAAA,SAuGSC,aAvGT,GAuGS;AACL,WAAO,sBAAP;AACD,GAzGH;;AAAA,SA2GSC,iBA3GT,GA2GS;AACL,WAAO,CACL;AACEC,MAAAA,IAAI,EAAE,cADR;AAEEC,MAAAA,YAAY,EAAE,EAFhB;AAGEC,MAAAA,SAAS,EAAE,QAHb;AAIEC,MAAAA,QAAQ,EAAE;AAJZ,KADK,CAAP;AAQD,GApHH;;AAAA;AAAA,EAAuCC,QAAvC;;AC5CA,IAAI+F,OAAO,GAAQ,EAAnB;AACA,IAAIC,QAAQ,GAAQ,EAApB;AACA,IAAI1D,KAAK,GAAQ,EAAjB;AACA,IAAI7D,QAAQ,GAAQ,EAApB;AACA,AAQAA,QAAQ,GAAG;AACTwH,EAAAA,UAAU,EAAE,wBADH;AAETC,EAAAA,aAAa,EAAE,EAFN;AAGTC,EAAAA,aAAa,EAAE;AAHN,CAAX;AAMA1H,QAAQ,CAACyH,aAAT,CAAuB,iBAAvB,IAA4C5H,eAA5C;AACAG,QAAQ,CAACyH,aAAT,CAAuB,qBAAvB,IAAgDjG,mBAAhD;AACAxB,QAAQ,CAACyH,aAAT,CACE,4BADF,IAEI5E,0BAFJ;AAGA7C,QAAQ,CAACyH,aAAT,CACE,kCADF,IAEI3E,gCAFJ;AAGA9C,QAAQ,CAACyH,aAAT,CAAuB,wBAAvB,IAAmD1E,sBAAnD;AACA/C,QAAQ,CAACyH,aAAT,CAAuB,2BAAvB,IAAsDrE,yBAAtD;AACApD,QAAQ,CAACyH,aAAT,CAAuB,iBAAvB,IAA4CpE,eAA5C;AACArD,QAAQ,CAACyH,aAAT,CAAuB,cAAvB,IAAyCvD,YAAzC;AACAlE,QAAQ,CAACyH,aAAT,CAAuB,uBAAvB,IAAkDtD,qBAAlD;AACAnE,QAAQ,CAACyH,aAAT,CAAuB,0BAAvB,IAAqDnD,wBAArD;AACAtE,QAAQ,CAACyH,aAAT,CAAuB,uBAAvB,IAAkDlD,qBAAlD;AACAvE,QAAQ,CAACyH,aAAT,CAAuB,sBAAvB,IAAiD/C,oBAAjD;AACA1E,QAAQ,CAACyH,aAAT,CAAuB,mBAAvB,IAA8CtB,iBAA9C;;AAIA,IAAIwB,eAAe,gBAAG,IAAIC,eAAJ,EAAtB;AAEAD,eAAe,CAACE,kCAAhB,CACE,UAAC9H,IAAD,EAAY+H,IAAZ,EAAuBC,YAAvB,EAA0ChD,SAA1C;AACE,MAAI,OAAO+C,IAAI,CAACnD,SAAZ,KAA0B,UAA9B,EAA0C;AACxC;AACA,QAAMqD,UAAU,GAAGjI,IAAI,CAACoB,IAAL,CAAUf,OAAV,CAAkB,IAAlB,EAAwB,EAAxB,CAAnB;AACAkH,IAAAA,OAAO,CAACU,UAAD,CAAP,GAAsB;AACpB5F,MAAAA,MAAM,EAAE0F,IAAI,CAACnD,SAAL,CAAeqD,UAAf,EAA2BjI,IAA3B,EAAiCgI,YAAjC,CADY;AAEpBhD,MAAAA,SAAS,EAAEA;AAFS,KAAtB;AAID;AACF,CAVH;AAaA4C,eAAe,CAACM,4BAAhB,CAA6C,UAAClI,IAAD,EAAY+H,IAAZ;AAC3C,MAAI,OAAOA,IAAI,CAACjG,UAAZ,KAA2B,UAA/B,EAA2C;AACzC0F,IAAAA,QAAQ,CAACxH,IAAI,CAAC+B,YAAL,CAAkB1B,OAAlB,CAA0B,IAA1B,EAAgC,EAAhC,CAAD,CAAR,GAAgD0H,IAAI,CAACjG,UAAL,CAAgB9B,IAAhB,CAAhD;AACA,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD,CAND;AAQA,IAAImI,kBAAkB,gBAAG,IAAIC,OAAJ,EAAzB;;AACA,IAAIC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD;AACxB,SAAO,UAASC,aAAT;AACL,WAAO,UAASxB,IAAT;AACL,aAAO,UAAS1E,MAAT;AACL,YAAI4E,SAAS,GAAGsB,aAAa,CAACvE,QAAd,EAAhB;AAEA,YAAIwE,MAAM,GAAGzB,IAAI,CAAC1E,MAAD,CAAjB;AAEA,YAAI2E,SAAS,GAAGuB,aAAa,CAACvE,QAAd,EAAhB;AAEAmE,QAAAA,kBAAkB,CAACpB,IAAnB,CAAwB;AAAEC,UAAAA,SAAS,EAAEA,SAAb;AAAwBC,UAAAA,SAAS,EAAEA;AAAnC,SAAxB;AACA,eAAOuB,MAAP;AACD,OATD;AAUD,KAXD;AAYD,GAbD;AAcD,CAfD;;AAkBAvI,QAAQ,CAAC8D,QAAT,GAAoB;AAClB,SAAOD,KAAP;AACD,CAFD;;AAIA,SAAS2E,UAAT,CAAoBR,UAApB,EAAwC1H,OAAxC;AACE,MAAM8B,MAAM,GAAGkF,OAAO,CAACU,UAAU,CAAC5H,OAAX,CAAmB,IAAnB,EAAyB,EAAzB,CAAD,CAAtB;;AAEA,MAAI,OAAOgC,MAAP,IAAiB,WAAjB,IAAgCA,MAAM,IAAI,IAA9C,EAAoD;AAClDpC,IAAAA,QAAQ,CAAC8D,QAAT,GAAoB7D,QAApB,CAA6BmC,MAAM,CAACA,MAAP,CAAcA,MAAM,CAAC2C,SAArB,EAAgCzE,OAAhC,CAA7B;AACD;AACF;;AAED,IAAImI,SAAS,GAAQ,SAAjBA,SAAiB,CACnBC,WADmB,EAEnBC,WAFmB,EAGnBC,OAHmB;AAKnB,MAAIA,OAAJ,EAAa;AACX,QAAIA,OAAO,CAACC,KAAZ,EAAmB;AACjB7I,MAAAA,QAAQ,CAACwH,UAAT,GAAsB;AAAA;;AAAA,eAAoB,YAAA9F,OAAO,EAACC,GAAR,2BAApB;AAAA,OAAtB;AACD;AACF;;AACD,SAAOgG,eAAe,CACnBmB,KADI,CACEJ,WADF,EACe1I,QADf,EACyB,IADzB,EAEJ+I,IAFI,CAEC,UAAC/I,QAAD;AACJ,QAAMgJ,WAAW,GAAGC,eAAA,CAClBjF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBsD,QAAlB,EAA4BoB,WAA5B,CADkB,CAApB;;AAIA,QACEO,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IACA,OAAOC,MAAP,KAAkB,WADlB,IAECA,MAAc,CAACC,oCAAf,KAAwDpG,SAH3D,EAIE;AACA,UAAMqG,gBAAgB,GACnBF,MAAc,CAACC,oCAAf,IAAuDL,OAD1D;AAEA,UAAIO,QAAJ;;AACA,UAAIZ,OAAO,CAACa,eAAZ,EAA6B;AAC3BD,QAAAA,QAAQ,GAAGD,gBAAgB,CACzBN,eAAA,CACES,KADF,EAEEtB,mBAAmB,CAAC,AAAD,CAFrB,EAGEQ,OAAO,CAACa,eAHV,CADyB,CAA3B;AAOD,OARD,MAQO;AACLD,QAAAA,QAAQ,GAAGD,gBAAgB,CACzBN,eAAA,CAAsBS,KAAtB,EAA6BtB,mBAAmB,CAAC,AAAD,CAAhD,CADyB,CAA3B;AAGD;;AAEDvE,MAAAA,KAAK,GAAGoF,WAAA,CACND,WADM,EAENJ,OAAO,CAACe,iBAFF,EAGNH,QAHM,CAAR;AAKD,KA3BD,MA2BO;AACL,UAAIZ,OAAO,CAACa,eAAZ,EAA6B;AAC3B5F,QAAAA,KAAK,GAAGoF,WAAA,CACND,WADM,EAENJ,OAAO,CAACe,iBAFF,EAGNV,eAAA,CACES,KADF,EAEEtB,mBAAmB,CAAC,AAAD,CAFrB,EAGEQ,OAAO,CAACa,eAHV,CAHM,CAAR;AASD,OAVD,MAUO;AACL5F,QAAAA,KAAK,GAAGoF,WAAA,CACND,WADM,EAENJ,OAAO,CAACe,iBAFF,EAGNV,eAAA,CAAsBS,KAAtB,EAA6BtB,mBAAmB,CAAC,AAAD,CAAhD,CAHM,CAAR;AAKD;AACF;AAGD;AACA;;;AAEApI,IAAAA,QAAQ,CAACC,QAAT,GAAoB4D,KAAK,CAAC5D,QAA1B;AAEA,WAAOD,QAAP;AACD,GA7DI,CAAP;AA8DD,CAxED;;AA0EA,IAAM4J,kBAAkB,GAAQ,SAA1BA,kBAA0B;AAAA,SAAMjC,eAAN;AAAA,CAAhC;;ICtKakC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAGzCC,WAHyC;AAKzC;AAAA;;AAAO;;;AAIL;AACA;AACA;;AAEA,iBAAA,GAAQ;AACNC,QAAAA,oBAAoB,EAAE,KADhB;AAENzJ,QAAAA,OAAO,EAAE,EAFH;AAGN0J,QAAAA,aAAa,EAAE;AAHT,OAAR;AAMA,yBAAA,GAAgB,CAAhB;;AA4CD;;AA1DD;;AAAA,WAgBEC,iBAhBF,GAgBE;;;AACE,UAAM7D,UAAU,GAAGwD,kBAAkB,GAAGM,iBAArB,CACjB,KAAKC,KAAL,CAAWC,QADM,CAAnB;;AAGA,UAAIhE,UAAJ,EAAgB;AACdA,QAAAA,UAAU,CAACa,SAAX,CAAqB;AACnBH,UAAAA,IAAI,EAAE,cAACxG,OAAD;AACJ,YAAA,MAAI,CAAC+J,QAAL,CAAc;AACZN,cAAAA,oBAAoB,EAClBzJ,OAAO,CAACgK,aAAR,KAA0BpH,SAA1B,GACI5C,OAAO,CAACgK,aADZ,GAEI,IAJM;AAKZhK,cAAAA,OAAO,EAAEA,OALG;AAMZ0J,cAAAA,aAAa,EAAE,MAAI,CAAC7H,KAAL,CAAW6H,aAAX,GAA2B;AAN9B,aAAd;AAQD;AAVkB,SAArB;AAYD;AACF,KAlCH;;AAAA,WAoCEO,MApCF,GAoCE;;;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAMC,YAAY,GAAG,SAAfA,YAAe;AACnB,eACEC,aAAA,CAACX,WAAD,oBAAgB,MAAI,CAACK;AAAa7J,UAAAA,OAAO,EAAE,MAAI,CAAC6B,KAAL,CAAW7B;UAAtD,CADF;AAGD,OAJD;;AAKA,UACE,KAAK6B,KAAL,CAAW4H,oBAAX,IACA,KAAKC,aAAL,GAAqB,KAAK7H,KAAL,CAAW6H,aAFlC,EAGE;AACA,aAAKA,aAAL,GAAqB,KAAK7H,KAAL,CAAW6H,aAAhC;AACA,eAAOS,aAAA,SAAA,MAAA,EAAGD,YAAY,EAAf,CAAP;AACD;;AACD,aAAOC,aAAA,SAAA,MAAA,CAAP;AACD,KAzDH;;AAAA;AAAA,IAAqBA,SAArB;AA2DD,CAhEM;;ICHMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAGvCZ,WAHuC;AAKvC;AAAA;;AAAO;;;AAIL;AACA;AACA;;AAEA,iBAAA,GAAQ,EAAR;;AAEA,yBAAA,GAAgB,UAACxJ,OAAD;;;AACdsJ,QAAAA,kBAAkB,GAAGe,WAArB,CAAiC,MAAKR,KAAL,CAAWC,QAA5C,eACK9J,OADL,6BAEG,MAAK6J,KAAL,CAAWS,eAFd,IAEgC,IAFhC;AAID,OALD;;;AAiBD;;AA3BD;;AAAA,WAiBEL,MAjBF,GAiBE;AACE,aACEE,aAAA,CAACX,WAAD,oBACO,KAAKK;AACVS,QAAAA,eAAe,EAAE,KAAKT,KAAL,CAAWS;AAC5BR,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AACrBS,QAAAA,aAAa,EAAE,KAAKA;QAJtB,CADF;AAQD,KA1BH;;AAAA;AAAA,IAAqBJ,SAArB;AA4BD,CAjCM;;;;"}