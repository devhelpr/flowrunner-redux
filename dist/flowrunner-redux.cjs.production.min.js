"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e,t=require("react"),r=require("redux"),n=require("rxjs"),a=(e=require("redux-thunk"))&&"object"==typeof e&&"default"in e?e.default:e,o=require("@devhelpr/flowrunner");function u(){return(u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function i(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}var c=function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var r=t.prototype;return r.execute=function(e,t){return t.dispatch({type:e.setVariable.replace(/ /g,"")+"SetAction",value:e.payload.value}),!0},r.getName=function(){return"ReduxActionTask"},r.getFullName=function(){return"ReduxAction"},r.getDescription=function(){return"Node that performs a simple redux action"},r.getIcon=function(){return"reduxaction"},r.getShape=function(){return"circle"},r.getTaskType=function(){return"frontend"},r.getPackageType=function(){return o.FlowTaskPackageType.DEFAULT_NODE},r.getCategory=function(){return"FlowCanvas"},r.getController=function(){return"FlowCanvasController"},r.getConfigMetaData=function(){return[{name:"setVariable",defaultValue:"",valueType:"string",required:!0}]},t}(o.FlowTask),s=function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var r=t.prototype;return r.execute=function(e,t){return console.log("RUNNING ReduxArrayStateType: "+e.id+" - "+e.name),!0},r.getName=function(){return"ReduxArrayStateType"},r.getFullName=function(){return"ReduxArray"},r.getReducer=function(e){var t=e.variableName.replace(/ /g,""),r=t+"PushArrayAction",n=t+"ClearArrayAction",a=t+"AssignArrayAction",o=t+"SetItemByKeyAction";return function(t,i){switch(void 0===t&&(t=[]),i.type){case n:return[];case a:return i.list;case r:var c=t.slice();return c.push(i.value),c;case o:return t.map((function(t){return u({},t[e.idPropertyName]===i.payload[e.idPropertyName]?i.payload:t)}));default:return t}}},r.getIcon=function(){return"reduxarray"},r.getShape=function(){return"rect"},r.getTaskType=function(){return"frontend"},r.getPackageType=function(){return o.FlowTaskPackageType.DEFAULT_NODE},r.getCategory=function(){return"FlowCanvas"},r.getController=function(){return"FlowCanvasController"},r.getConfigMetaData=function(){return[{name:"variableName",defaultValue:"",valueType:"string",required:!0}]},t}(o.FlowTask),l=function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var r=t.prototype;return r.execute=function(e,t){return t.dispatch({type:e.setVariable.replace(/ /g,"")+"AssignArrayAction",list:e.payload.list}),!0},r.getName=function(){return"ReduxAssignArrayActionTask"},r.getFullName=function(){return"ReduxAssignArrayAction"},r.getIcon=function(){return"reduxassignarrayaction"},r.getShape=function(){return"circle"},r.getTaskType=function(){return"frontend"},r.getPackageType=function(){return o.FlowTaskPackageType.DEFAULT_NODE},r.getCategory=function(){return"FlowCanvas"},r.getController=function(){return"FlowCanvasController"},r.getConfigMetaData=function(){return[{name:"setVariable",defaultValue:"",valueType:"string",required:!0}]},t}(o.FlowTask),p=function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var r=t.prototype;return r.execute=function(e,t){return t.dispatch({type:e.setVariable.replace(/ /g,"")+"SetItemByKeyAction",payload:e.payload}),!0},r.getName=function(){return"ReduxSetItemByKeyArrayActionTask"},r.getFullName=function(){return"ReduxSetItemByKeyArrayAction"},r.getIcon=function(){return"reduxsetitembykeyarrayaction"},r.getShape=function(){return"circle"},r.getTaskType=function(){return"frontend"},r.getPackageType=function(){return o.FlowTaskPackageType.DEFAULT_NODE},r.getCategory=function(){return"FlowCanvas"},r.getController=function(){return"FlowCanvasController"},r.getConfigMetaData=function(){return[{name:"setVariable",defaultValue:"",valueType:"string",required:!0}]},t}(o.FlowTask),g=function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var r=t.prototype;return r.execute=function(e,t,r){return console.log("RUNNING ReduxPropertyStateType: "+e.id+" - "+e.name),!0},r.getName=function(){return"ReduxPropertyStateType"},r.getFullName=function(){return"ReduxProperty"},r.getReducer=function(e){var t=e.variableName.replace(/ /g,"")+"SetAction";return function(e,r){void 0===e&&(e="");try{switch(r.type){case t:return void 0!==r.value?r.value:e;default:return e}}catch(t){return e}}},r.getIcon=function(){return"reduxproperty"},r.getShape=function(){return"rect"},r.getTaskType=function(){return"frontend"},r.getPackageType=function(){return o.FlowTaskPackageType.DEFAULT_NODE},r.getCategory=function(){return"FlowCanvas"},r.getController=function(){return"FlowCanvasController"},r.getConfigMetaData=function(){return[{name:"value",defaultValue:"",valueType:"string",required:!1},{name:"variableName",defaultValue:"",valueType:"string",required:!1}]},t}(o.FlowTask),f=function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var r=t.prototype;return r.execute=function(e,t){return t.dispatch({type:e.setVariable.replace(/ /g,"")+"ClearArrayAction",value:e.payload.value}),!0},r.getName=function(){return"ReduxClearArrayActionTask"},r.getFullName=function(){return"ReduxClearArrayActionTask"},r.getIcon=function(){return"reduxcleararrayaction"},r.getShape=function(){return"circle"},r.getTaskType=function(){return"frontend"},r.getPackageType=function(){return o.FlowTaskPackageType.DEFAULT_NODE},r.getCategory=function(){return"FlowCanvas"},r.getController=function(){return"FlowCanvasController"},r.getConfigMetaData=function(){return[{name:"setVariable",defaultValue:"",valueType:"string",required:!0}]},t}(o.FlowTask),y=function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var r=t.prototype;return r.execute=function(e,t,r){return new Promise((function(r,n){if(void 0!==e.assignTo&&void 0!==e.readKey&&""!==e.assignTo&&""!==e.readKey){var a,o=e.getVariable.replace(/ /g,""),u=t.getStore().getState();r(Object.assign({},e.payload,((a={})[e.assignTo]=u[o][e.readKey],a)))}else n()}))},r.getName=function(){return"ReduxGetKeyTask"},r.getFullName=function(){return"ReduxGetKey"},r.getDescription=function(){return"Reducer name: {{{title}}} - get property: {{{readKey}}} set property {{{assignTo}}} in payload"},r.getIcon=function(){return"reactgetkey"},r.getShape=function(){return"circle"},r.getTaskType=function(){return"frontend"},r.getPackageType=function(){return o.FlowTaskPackageType.DEFAULT_NODE},r.getCategory=function(){return"FlowCanvas"},r.getController=function(){return"FlowCanvasController"},r.getConfigMetaData=function(){return[{name:"readKey",defaultValue:"",valueType:"string",required:!0},{name:"assignTo",defaultValue:"",valueType:"string",required:!0},{name:"getVariable",defaultValue:"",valueType:"string",required:!0}]},t}(o.FlowTask),d=function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var r=t.prototype;return r.execute=function(e,t,r){return new Promise((function(r,n){if(void 0!==e.assignTo&&""!==e.assignTo){var a,o=e.getVariable.replace(/ /g,""),u=t.getStore().getState();r(Object.assign({},e.payload,((a={})[e.assignTo]=u[o],a)))}else n()}))},r.getName=function(){return"ReduxGetTask"},r.getFullName=function(){return"ReduxGet"},r.getDescription=function(){return"Get from store: Reducer name: {{{title}}} - and set property {{{assignTo}}} in payload"},r.getIcon=function(){return"reactget"},r.getShape=function(){return"rect"},r.getTaskType=function(){return"frontend"},r.getPackageType=function(){return o.FlowTaskPackageType.DEFAULT_NODE},r.getCategory=function(){return"FlowCanvas"},r.getController=function(){return"FlowCanvasController"},r.getConfigMetaData=function(){return[{name:"assignTo",defaultValue:"",valueType:"string",required:!0},{name:"getVariable",defaultValue:"",valueType:"string",required:!0}]},t}(o.FlowTask),T=function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var r=t.prototype;return r.execute=function(e,t){return console.log("RUNNING ReduxHashmapStateType: "+e.id+" - "+e.name),!0},r.getName=function(){return"ReduxHashmapStateType"},r.getFullName=function(){return"ReduxHashmap"},r.getReducer=function(e){var t=e.variableName.replace(/ /g,"")+"SetKeyAction";return function(e,r){var n;switch(void 0===e&&(e={}),r.type){case t:return Object.assign({},e,((n={})[r.key]=r.value,n));default:return e}}},r.getIcon=function(){return"reduxhashmap"},r.getShape=function(){return"rect"},r.getTaskType=function(){return"frontend"},r.getPackageType=function(){return o.FlowTaskPackageType.DEFAULT_NODE},r.getCategory=function(){return"FlowCanvas"},r.getController=function(){return"FlowCanvasController"},r.getConfigMetaData=function(){return[{name:"variableName",defaultValue:"",valueType:"string",required:!0}]},t}(o.FlowTask),v=function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var r=t.prototype;return r.execute=function(e,t){return t.dispatch({type:e.setVariable.replace(/ /g,"")+"PushArrayAction",value:e.payload.value}),!0},r.getName=function(){return"ReduxPushArrayActionTask"},r.getFullName=function(){return"ReduxPushArrayAction"},r.getIcon=function(){return"reduxpusharrayaction"},r.getShape=function(){return"circle"},r.getTaskType=function(){return"frontend"},r.getPackageType=function(){return o.FlowTaskPackageType.DEFAULT_NODE},r.getCategory=function(){return"FlowCanvas"},r.getController=function(){return"FlowCanvasController"},r.getConfigMetaData=function(){return[{name:"setVariable",defaultValue:"",valueType:"string",required:!0}]},t}(o.FlowTask),h=function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var r=t.prototype;return r.execute=function(e,t){return t.callStack.dispatch({key:e.assignToKey,type:e.setVariable.replace(/ /g,"")+"SetKeyAction",value:e.payload.value}),!0},r.getDescription=function(){return"Reducer name: {{{title}}} - set property: {{{assignToKey}}} using property 'value' from payload"},r.getName=function(){return"ReduxSetKeyActionTask"},r.getFullName=function(){return"ReduxSetKeyAction"},r.getIcon=function(){return"reduxsetkeyaction"},r.getShape=function(){return"circle"},r.getTaskType=function(){return"frontend"},r.getPackageType=function(){return o.FlowTaskPackageType.DEFAULT_NODE},r.getCategory=function(){return"FlowCanvas"},r.getController=function(){return"FlowCanvasController"},r.getConfigMetaData=function(){return[{name:"assignToKey",defaultValue:"",valueType:"string",required:!0},{name:"setVariable",defaultValue:"",valueType:"string",required:!0}]},t}(o.FlowTask),C=function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var r=t.prototype;return r.execute=function(e){return console.log("RUNNING ReduxThunkActionTask: "+e.id+" - "+e.name),!0},r.getName=function(){return"ReduxThunkActionTask"},r.getFullName=function(){return"ReduxThunkAction"},r.getIcon=function(){return"reduxthunkaction"},r.getShape=function(){return"circle"},r.getTaskType=function(){return"frontend"},r.getPackageType=function(){return o.FlowTaskPackageType.DEFAULT_NODE},r.getCategory=function(){return"FlowCanvas"},r.getController=function(){return"FlowCanvasController"},r.getAction=function(e,t,r){return function(e,t){return function(n){e.outputs.map((function(e){return r.emit(e.endshapeid.toString(),t,n),!0}))}}},t}(o.FlowTask),k=function(e){function t(){return e.apply(this,arguments)||this}i(t,e);var r=t.prototype;return r.execute=function(e,t){return n.Observable.create((function(r){try{if(void 0!==e.propertyName&&""!==e.propertyName){var n=t.getObservable("storechange");void 0!==n&&!1!==n?n.subscribe({complete:function(){console.log("StoreObserverTask: Completed observable for ",e.name)},error:function(e){r.error(e)},next:function(t){null!=e.propertyName&&""!==e.propertyName&&(function e(t,r){var n=Object.prototype.toString.call(t);if(n!==Object.prototype.toString.call(r))return!1;if(["[object Array]","[object Object]"].indexOf(n)<0)return!1;var a="[object Array]"===n?t.length:Object.keys(t).length;if(a!==("[object Array]"===n?r.length:Object.keys(r).length))return!1;var o=function(t,r){var n=Object.prototype.toString.call(t);if(["[object Array]","[object Object]"].indexOf(n)>=0){if(!e(t,r))return!1}else{if(n!==Object.prototype.toString.call(r))return!1;if("[object Function]"===n){if(t.toString()!==r.toString())return!1}else if(t!==r)return!1}return!0};if("[object Array]"===n){for(var u=0;u<a;u++)if(!1===o(t[u],r[u]))return!1}else for(var i in t)if(t.hasOwnProperty(i)&&!1===o(t[i],r[i]))return!1;return!0}(t.nextState[e.propertyName],t.prevState[e.propertyName])||r.next(t.nextState))}}):r.error("StoreObserverTask: Error - observable not found",e.observe)}else r.error("StoreObserverTask: Error - nothing to observe")}catch(e){r.error(e)}}))},r.isAttachedToExternalObservable=function(){return!0},r.isAttachedToStoreChanges=function(){return!0},r.getDescription=function(){return"Node that observes store changes for {{{propertyName}}}"},r.getName=function(){return"StoreObserverTask"},r.getFullName=function(){return"StoreObserver"},r.getIcon=function(){return"storeobserver"},r.getShape=function(){return"smallcircle"},r.getDefaultColor=function(){return"#00ff80ff"},r.getTaskType=function(){return"both"},r.getPackageType=function(){return o.FlowTaskPackageType.DEFAULT_NODE},r.getCategory=function(){return"FlowCanvas"},r.getController=function(){return"FlowCanvasController"},r.getConfigMetaData=function(){return[{name:"propertyName",defaultValue:"",valueType:"string",required:!0}]},t}(o.FlowTask),m={},x={},A={},F={};(F={logMessage:function(){},pluginClasses:{},registerModel:function(){}}).pluginClasses.ReduxActionTask=c,F.pluginClasses.ReduxArrayStateType=s,F.pluginClasses.ReduxAssignArrayActionTask=l,F.pluginClasses.ReduxSetItemByKeyArrayActionTask=p,F.pluginClasses.ReduxPropertyStateType=g,F.pluginClasses.ReduxClearArrayActionTask=f,F.pluginClasses.ReduxGetKeyTask=y,F.pluginClasses.ReduxGetTask=d,F.pluginClasses.ReduxHashmapStateType=T,F.pluginClasses.ReduxPushArrayActionTask=v,F.pluginClasses.ReduxSetKeyActionTask=h,F.pluginClasses.ReduxThunkActionTask=C,F.pluginClasses.StoreObserverTask=k;var b=new o.FlowEventRunner;b.registerFlowNodeOverrideAttachHook((function(e,t,r,n){if("function"==typeof t.getAction){var a=e.name.replace(/ /g,"");m[a]={action:t.getAction(a,e,r),nodeEvent:n}}})),b.registerFlowNodeRegisterHook((function(e,t){return"function"==typeof t.getReducer&&(x[e.variableName.replace(/ /g,"")]=t.getReducer(e),!0)}));var w=new n.Subject,N=function(e){return function(e){return function(t){return function(r){var n=e.getState(),a=t(r),o=e.getState();return w.next({nextState:o,prevState:n}),a}}}};F.getStore=function(){return A};var S=function(){return b};exports.ReactComponentFlowConnector=function(e){return function(r){function n(){var e;return(e=r.apply(this,arguments)||this).state={showWrappedComponent:!1,payload:{},renderCounter:1},e.renderCounter=1,e}i(n,r);var a=n.prototype;return a.componentDidMount=function(){var e=this,t=S().getObservableNode(this.props.nodeName);t&&t.subscribe({next:function(t){e.setState({showWrappedComponent:void 0===t.showComponent||t.showComponent,payload:t,renderCounter:e.state.renderCounter+1})}})},a.render=function(){return this.state.showWrappedComponent&&this.renderCounter<this.state.renderCounter?(this.renderCounter=this.state.renderCounter,t.createElement(t.Fragment,null,t.createElement(e,Object.assign({},this.props,{payload:this.state.payload})))):t.createElement(t.Fragment,null)},n}(t.Component)},exports.ReactComponentTriggerFlow=function(e){return function(r){function n(){var e;return(e=r.apply(this,arguments)||this).state={},e.onTriggerFlow=function(t){var r;S().executeNode(e.props.nodeName,u({},t,((r={})[e.props.triggerProperty]=!0,r)))},e}return i(n,r),n.prototype.render=function(){return t.createElement(e,Object.assign({},this.props,{triggerProperty:this.props.triggerProperty,nodeName:this.props.nodeName,onTriggerFlow:this.onTriggerFlow}))},n}(t.Component)},exports.ReduxActionTask=c,exports.ReduxArrayStateType=s,exports.ReduxAssignArrayActionTask=l,exports.ReduxClearArrayActionTask=f,exports.ReduxGetKeyTask=y,exports.ReduxGetTask=d,exports.ReduxHashmapStateType=T,exports.ReduxPropertyStateType=g,exports.ReduxPushArrayActionTask=v,exports.ReduxSetItemByKeyArrayActionTask=p,exports.ReduxSetKeyActionTask=h,exports.ReduxThunkActionTask=C,exports.StoreObserverTask=k,exports.flowAction=function(e,t){var r=m[e.replace(/ /g,"")];void 0!==r&&null!=r&&F.getStore().dispatch(r.action(r.nodeEvent,t))},exports.getFlowEventRunner=S,exports.startFlow=function(e,t,n){return n&&n.debug&&(F.logMessage=function(){var e;return(e=console).log.apply(e,arguments)}),b.start(e,F,!0).then((function(e){var o=r.combineReducers(Object.assign({},x,t));return A=r.createStore(o,n.initialStoreState,n.reduxMiddleware?r.applyMiddleware(a,N(),n.reduxMiddleware):r.applyMiddleware(a,N())),e.dispatch=A.dispatch,e}))};
//# sourceMappingURL=flowrunner-redux.cjs.production.min.js.map
